var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,2.05,1,2.427]],["body/modules/AppModule.html",[0,3.295,1,4.805,2,2.634,3,3.57,4,3.892,5,3.892,6,4.287,7,0.022,8,4.287,9,4.315,10,3.449,11,3.449,12,0.291,13,0.257,14,0.257,15,4.565,16,4.315,17,0.397,18,1.671,19,4.565,20,4.565,21,0.291,22,0.597,23,0.017,24,0.017]],["title/controllers/AuthController.html",[25,2.221,26,2.427]],["body/controllers/AuthController.html",[7,0.022,12,0.203,13,0.18,14,0.18,17,0.42,18,1.169,21,0.203,22,0.418,23,0.014,24,0.014,25,1.997,26,3.076,27,1.997,28,2.724,29,2.724,30,1.401,31,0.203,32,1.748,33,4.439,34,3.317,35,2.437,36,2.437,37,3.195,38,3.867,39,1.975,40,3.839,41,3.195,42,3.195,43,1.105,44,3.195,45,1.648,46,1.469,47,0.403,48,1.648,49,5.09,50,1.748,51,1.033,52,3.195,53,3.867,54,3.195,55,3.195,56,3.195,57,1.843,58,2.724,59,3.195,60,3.076,61,0.583,62,4.446,63,4.446,64,2.724,65,1.401,66,0.74,67,0.658,68,1.748,69,1.169,70,1.711,71,3.195,72,3.076,73,3.195,74,3.195,75,3.076,76,3.195,77,3.195,78,3.195,79,2.182,80,0.583,81,2.724,82,1.843,83,1.997,84,2.182,85,2.724,86,3.839,87,3.195,88,3.195,89,0.874,90,3.195,91,3.195,92,3.195,93,3.195]],["title/guards/AuthGuard.html",[94,2.684,95,2.427]],["body/guards/AuthGuard.html",[7,0.022,12,0.235,13,0.208,14,0.208,17,0.383,18,1.352,21,0.235,22,0.483,23,0.015,24,0.015,31,0.235,32,1.932,34,3.014,43,1.221,45,1.821,46,1.623,47,0.354,48,1.821,50,1.434,51,0.908,57,2.13,80,0.908,82,2.871,95,3.399,96,2.79,97,3.149,98,0.555,99,4.749,100,4.798,101,5.134,102,3.149,103,1.855,104,3.693,105,4.242,106,5.134,107,3.693,108,3.149,109,4.242,110,2.326,111,2.79,112,4.976,113,3.399,114,3.693,115,1.352,116,3.149,117,3.149,118,1.434,119,3.149,120,1.16,121,3.693,122,3.693,123,3.759,124,0.651,125,3.693,126,2.522,127,2.13,128,4.242,129,3.149,130,3.149]],["title/modules/AuthModule.html",[0,2.05,6,2.221]],["body/modules/AuthModule.html",[0,3.014,2,2.292,3,3.266,6,4.213,7,0.022,9,3.947,10,3.002,11,3.002,12,0.253,13,0.223,14,0.223,16,3.002,17,0.41,18,1.454,21,0.253,22,0.52,23,0.016,24,0.016,26,3.986,27,3.266,46,1.296,61,0.725,69,1.912,70,2.128,103,2.182,131,3.388,132,3.388,133,3.388,134,3.973,135,4.454,136,5.224,137,5.224,138,3.388,139,4.454,140,3.973,141,2.154,142,3.973,143,3.388,144,3.388,145,3.388,146,3.388,147,3.973,148,2.714,149,3.388,150,3.973]],["title/injectables/AuthService.html",[103,1.095,110,1.661]],["body/injectables/AuthService.html",[7,0.022,12,0.244,13,0.216,14,0.216,17,0.389,18,1.405,21,0.244,22,0.502,23,0.015,24,0.015,31,0.244,32,1.983,33,4.178,34,3.074,43,1.409,45,1.869,46,1.666,47,0.409,48,1.869,50,1.491,51,0.932,57,2.215,60,4.178,61,0.701,67,0.791,68,2.228,69,1.405,70,2.057,79,3.92,80,0.932,81,3.274,82,2.215,83,3.193,84,2.622,85,3.274,89,0.745,98,0.768,99,4.336,103,1.574,110,2.387,115,1.405,124,0.751,151,2.622,152,3.274,153,2.106,154,3.274,155,5.107,156,5.107,157,3.84,158,2.24,159,3.84,160,3.84]],["title/interfaces/AuthServiceClient.html",[68,1.379,161,0.2]],["body/interfaces/AuthServiceClient.html",[7,0.022,12,0.178,13,0.157,14,0.157,17,0.26,21,0.424,23,0.012,24,0.012,30,1.792,31,0.178,32,1.586,35,2.259,36,2.259,43,1.187,45,1.769,46,1.576,47,0.344,48,1.769,50,1.877,51,0.882,61,0.509,66,1.506,67,0.575,68,1.586,69,1.021,80,0.509,89,0.542,103,0.86,115,1.495,120,1.318,124,0.872,141,1.151,153,1.993,158,1.792,161,0.352,162,0.685,163,1.151,164,2.414,165,2.335,166,2.791,167,1.877,168,2.414,169,2.335,170,2.791,171,2.414,172,2.483,173,2.791,174,0.768,175,0.768,176,0.685,177,1.792,178,1.792,179,1.684,180,1.057,181,0.996,182,1.057,183,1.684,184,1.304,185,1.224,186,1.256,187,1.224,188,1.124,189,1.628,190,1.464,191,1.124,192,1.394,193,1.124,194,1.124,195,1.394]],["title/interfaces/AuthServiceController.html",[161,0.2,185,1.558]],["body/interfaces/AuthServiceController.html",[7,0.022,12,0.173,13,0.153,14,0.153,17,0.255,21,0.422,23,0.012,24,0.012,30,1.757,31,0.173,32,1.556,35,2.225,36,2.225,43,1.169,45,1.742,46,1.553,47,0.339,48,1.742,50,1.848,51,1.07,61,0.496,66,1.497,67,0.56,68,1.055,69,0.995,80,0.496,89,0.527,103,0.837,115,1.742,120,1.309,124,0.867,141,1.121,153,1.963,158,1.757,161,0.35,162,0.667,163,1.121,164,2.378,165,2.31,167,1.848,168,2.378,169,2.31,171,2.378,172,2.457,174,0.748,175,0.748,176,0.667,177,1.757,178,1.757,179,1.963,180,1.041,181,0.981,182,1.041,183,1.963,184,1.27,185,1.757,186,1.237,187,1.192,188,1.102,189,1.612,190,1.445,191,1.102,192,1.358,193,1.102,194,1.102,195,1.358,196,2.718,197,2.718,198,2.718]],["title/controllers/BinanceController.html",[25,2.221,199,2.427]],["body/controllers/BinanceController.html",[7,0.022,12,0.203,13,0.179,14,0.179,17,0.42,18,1.166,21,0.203,22,0.417,23,0.014,24,0.014,25,1.992,27,1.992,29,2.717,31,0.203,32,1.745,33,4.436,34,3.315,39,1.971,40,3.833,43,1.103,45,1.166,46,1.039,47,0.371,48,1.166,49,4.44,50,1.745,51,1.032,57,1.839,58,2.717,60,3.07,61,0.582,62,4.44,63,4.44,64,2.717,65,1.398,66,0.739,67,0.657,79,2.177,80,0.582,82,1.839,83,1.992,84,2.177,86,3.833,89,0.872,95,2.177,123,3.396,199,3.07,200,2.717,201,1.166,202,2.332,203,1.853,204,4.495,205,3.187,206,3.187,207,3.187,208,3.187,209,3.863,210,4.495,211,3.187,212,3.187,213,3.187,214,3.187,215,3.187,216,3.187,217,3.187,218,3.07,219,3.187,220,3.07,221,3.187,222,1.553,223,1.039,224,1.839,225,3.187,226,3.187,227,2.717,228,2.717,229,1.645,230,4.495,231,3.187,232,4.495,233,3.187,234,3.187,235,3.187,236,3.187]],["title/classes/BinanceGateway.html",[22,0.465,237,2.427]],["body/classes/BinanceGateway.html",[7,0.022,12,0.141,13,0.125,14,0.125,17,0.345,18,0.814,21,0.141,22,0.291,23,0.01,24,0.01,31,0.141,32,1.336,33,4.387,39,0.975,43,1.436,45,1.736,46,1.547,47,0.417,48,1.736,50,1.635,57,1.282,60,3.24,61,0.406,66,0.976,67,0.458,79,2.877,80,0.628,82,1.282,83,3.207,84,1.518,89,0.431,98,0.518,118,1.336,120,0.868,124,0.621,127,2.736,154,1.895,184,1.969,201,0.814,222,1.455,223,0.725,224,1.282,227,1.895,228,1.895,237,2.351,238,0.975,239,1.679,240,4.212,241,4.212,242,4.212,243,4.212,244,5.427,245,4.212,246,3.442,247,3.442,248,3.442,249,3.442,250,2.935,251,2.351,252,3.442,253,2.223,254,3.442,255,2.223,256,2.223,257,4.627,258,4.212,259,3.442,260,2.223,261,2.223,262,3.442,263,3.442,264,4.826,265,4.212,266,2.223,267,3.442,268,3.442,269,3.442,270,2.223,271,1.679,272,2.223,273,1.518,274,0.814,275,2.935,276,3.442,277,1.955,278,2.223,279,2.223,280,2.223,281,2.223,282,3.442,283,3.442,284,4.743,285,3.442,286,2.935,287,3.442,288,3.442,289,3.442,290,2.223,291,2.223,292,2.223,293,5.131,294,2.223,295,3.442,296,3.442,297,4.743,298,2.223,299,3.442,300,2.223,301,2.223,302,2.223,303,2.223,304,2.223,305,2.223,306,2.223,307,2.223,308,2.223,309,1.419,310,2.223,311,3.442,312,2.223,313,2.223,314,2.223,315,2.223,316,3.442,317,2.223,318,2.223,319,2.223]],["title/modules/BinanceModule.html",[0,2.05,8,2.221]],["body/modules/BinanceModule.html",[0,3.221,2,2.541,7,0.022,8,3.491,12,0.28,13,0.248,14,0.248,16,3.328,17,0.423,18,1.612,21,0.28,22,0.576,23,0.017,24,0.017,27,3.491,46,1.437,61,0.804,135,3.756,138,3.756,139,4.761,143,3.756,144,3.756,145,3.756,146,3.756,148,3.009,149,3.756,199,4.187,223,1.821,224,2.541,237,3.814,320,4.405,321,4.405,322,4.405,323,2.044,324,4.405,325,4.405]],["title/interfaces/BinanceServiceClient.html",[161,0.2,222,1.227]],["body/interfaces/BinanceServiceClient.html",[7,0.022,12,0.16,13,0.141,14,0.141,17,0.24,21,0.424,23,0.011,24,0.011,31,0.16,32,1.467,43,1.24,45,1.849,46,1.648,47,0.36,48,1.849,50,1.962,51,0.829,61,0.458,66,1.528,67,0.518,80,0.458,89,0.487,120,1.281,124,0.814,161,0.356,162,0.617,167,2.21,174,0.691,175,0.691,176,0.617,180,0.826,181,1.343,182,0.993,186,1.181,188,1.039,189,1.566,190,1.39,191,1.039,193,1.039,194,1.039,201,1.383,202,1.873,203,2.083,222,1.305,223,0.819,229,1.663,274,0.919,277,1.036,309,1.558,323,0.919,326,0.919,327,1.992,328,2.216,329,1.992,330,2.104,331,2.512,332,1.657,333,1.983,334,2.512,335,1.992,336,2.104,337,2.512,338,1.657,339,2.104,340,2.512,341,1.383,342,1.383,343,1.101,344,1.101,345,1.101,346,1.101,347,1.101,348,1.101,349,1.101,350,1.101,351,1.467,352,1.101,353,1.101,354,0.975,355,0.975,356,1.101,357,1.101,358,1.036]],["title/interfaces/BinanceServiceController.html",[161,0.2,354,1.379]],["body/interfaces/BinanceServiceController.html",[7,0.022,12,0.156,13,0.138,14,0.138,17,0.236,21,0.422,23,0.011,24,0.011,31,0.156,32,1.441,43,1.226,45,1.827,46,1.628,47,0.356,48,1.827,50,1.938,51,1.03,61,0.448,66,1.52,67,0.505,80,0.448,89,0.476,120,1.273,124,0.808,161,0.354,162,0.602,167,2.19,174,0.675,175,0.675,176,0.602,180,0.811,181,1.336,182,0.979,186,1.164,188,1.021,189,1.552,190,1.374,191,1.021,193,1.021,194,1.021,201,1.359,202,1.846,203,2.058,222,0.847,223,0.8,229,1.639,274,0.898,277,1.011,309,1.53,323,0.898,326,0.898,327,1.964,328,2.189,329,1.964,330,2.082,332,1.628,333,1.963,335,1.964,336,2.082,338,1.628,339,2.082,341,1.639,342,1.639,343,1.076,344,1.076,345,1.076,346,1.076,347,1.076,348,1.076,349,1.076,350,1.076,351,1.738,352,1.076,353,1.076,354,1.441,355,0.952,356,1.076,357,1.076,358,1.011,359,2.453,360,2.453,361,2.453,362,2.453]],["title/interfaces/Empty.html",[161,0.2,330,1.379]],["body/interfaces/Empty.html",[7,0.022,12,0.185,13,0.163,14,0.163,17,0.267,21,0.435,23,0.013,24,0.013,51,0.902,61,0.529,66,1.496,67,0.598,80,0.529,89,0.563,120,1.33,124,0.845,161,0.369,162,0.712,167,1.631,174,0.798,175,0.798,176,0.712,180,0.919,181,1.383,182,1.08,186,1.284,188,1.156,189,1.65,190,1.491,191,1.156,193,1.156,194,1.156,201,1.538,202,1.196,203,1.732,222,1.002,223,0.946,229,1.809,274,1.061,277,1.196,309,1.732,323,1.061,326,1.061,327,1.272,328,1.843,329,1.843,330,2.103,332,1.272,333,1.809,335,1.843,336,1.918,338,1.272,339,1.918,341,1.538,342,1.538,343,1.272,344,1.272,345,1.272,346,1.272,347,1.272,348,1.272,349,1.272,350,1.272,351,1.631,352,1.272,353,1.272,354,1.126,355,1.126,356,1.272,357,1.272,358,1.196]],["title/classes/GetSpreadResponceDto.html",[22,0.465,220,2.427]],["body/classes/GetSpreadResponceDto.html",[7,0.022,12,0.278,13,0.246,14,0.246,17,0.354,21,0.278,22,0.572,23,0.017,24,0.017,31,0.278,39,2.68,43,1.5,47,0.435,65,1.918,98,0.836,118,2.158,124,0.727,180,1.336,181,1.325,182,1.336,220,3.797,224,2.524,229,2.237,238,1.918,341,2.237,363,3.73,364,3.692,365,4.374,366,4.374,367,4.374]],["title/interfaces/GetSpreadResponse.html",[161,0.2,341,1.3]],["body/interfaces/GetSpreadResponse.html",[7,0.022,12,0.175,13,0.155,14,0.155,17,0.257,21,0.431,23,0.012,24,0.012,31,0.175,47,0.341,51,0.874,61,0.502,66,1.476,67,0.566,80,0.502,89,0.533,98,0.608,120,1.312,124,0.859,161,0.364,162,0.675,167,1.568,174,0.756,175,0.756,176,0.675,180,1.23,181,1.414,182,1.286,186,1.245,188,1.111,189,1.619,190,1.453,191,1.111,193,1.111,194,1.111,201,1.479,202,1.133,203,1.666,222,0.949,223,0.896,229,2.154,274,1.006,277,1.133,309,1.666,323,1.006,326,1.006,327,1.205,328,1.772,329,1.772,330,1.86,332,1.205,333,1.753,335,1.772,336,1.86,338,1.205,339,1.86,341,1.753,342,1.479,343,1.205,344,1.205,345,1.205,346,1.205,347,1.205,348,1.205,349,1.205,350,1.205,351,1.568,352,1.205,353,1.205,354,1.067,355,1.067,356,1.205,357,1.205,358,1.133]],["title/interfaces/LoginRequest.html",[161,0.2,165,1.465]],["body/interfaces/LoginRequest.html",[7,0.022,12,0.192,13,0.17,14,0.17,17,0.275,21,0.43,23,0.013,24,0.013,30,1.897,31,0.192,35,1.411,36,1.411,47,0.308,51,0.922,61,0.551,66,1.451,67,0.622,68,1.172,69,1.105,80,0.551,89,0.586,98,0.651,103,0.93,115,1.583,120,1.343,124,0.911,141,1.244,153,1.244,158,1.897,161,0.36,162,0.741,163,1.244,164,2.16,165,2.275,168,2.16,169,2.084,171,2.16,172,2.216,174,0.83,175,0.83,176,0.741,177,2.562,178,2.562,179,1.783,180,1.105,181,1.041,182,1.105,183,1.783,184,1.411,185,1.324,186,1.314,187,1.324,188,1.19,189,1.672,190,1.518,191,1.19,192,1.508,193,1.19,194,1.19,195,1.508]],["title/classes/LoginRequestDto.html",[22,0.465,38,2.427]],["body/classes/LoginRequestDto.html",[7,0.022,12,0.265,13,0.235,14,0.235,17,0.38,21,0.265,22,0.706,23,0.016,24,0.016,31,0.265,38,3.683,39,2.365,43,1.324,47,0.384,65,1.829,70,2.234,98,0.811,118,2.093,124,0.827,165,2.464,177,2.869,178,2.62,238,1.829,364,3.201,368,3.556,369,3.556,370,5.386,371,4.597,372,4.171,373,3.556,374,4.597,375,4.074,376,4.597,377,4.171,378,4.597,379,3.556,380,2.607,381,3.556]],["title/interfaces/LoginResponse.html",[161,0.2,183,1.465]],["body/interfaces/LoginResponse.html",[7,0.022,12,0.189,13,0.167,14,0.167,17,0.272,21,0.429,23,0.013,24,0.013,30,1.874,31,0.189,35,1.388,36,1.388,47,0.357,51,0.914,61,0.542,66,1.444,67,0.612,68,1.152,69,1.087,80,0.542,89,0.576,98,0.643,103,0.915,115,1.564,120,1.338,124,0.909,141,1.224,153,1.224,158,2.545,161,0.358,162,0.729,163,1.224,164,2.135,165,2.064,168,2.135,169,2.064,171,2.135,172,2.196,174,0.817,175,0.817,176,0.729,177,1.874,178,1.874,179,1.762,180,1.321,181,1.196,182,1.321,183,2.064,184,1.388,185,1.302,186,1.301,187,1.302,188,1.176,189,1.663,190,1.507,191,1.176,192,1.483,193,1.176,194,1.176,195,1.483]],["title/classes/LoginResponseDto.html",[22,0.465,72,2.427]],["body/classes/LoginResponseDto.html",[7,0.022,12,0.278,13,0.246,14,0.246,17,0.354,21,0.278,22,0.572,23,0.017,24,0.017,31,0.278,39,2.68,43,1.5,47,0.435,65,1.918,70,2.343,72,3.797,98,0.836,118,2.158,124,0.841,158,2.68,180,1.336,181,1.146,182,1.336,183,2.519,238,1.918,364,3.692,382,3.73,383,4.374,384,4.374,385,4.374]],["title/interfaces/RegisterRequest.html",[161,0.2,169,1.465]],["body/interfaces/RegisterRequest.html",[7,0.022,12,0.192,13,0.17,14,0.17,17,0.275,21,0.43,23,0.013,24,0.013,30,1.897,31,0.192,35,1.411,36,1.411,47,0.308,51,0.922,61,0.551,66,1.451,67,0.622,68,1.172,69,1.105,80,0.551,89,0.586,98,0.651,103,0.93,115,1.583,120,1.343,124,0.911,141,1.244,153,1.244,158,1.897,161,0.36,162,0.741,163,1.244,164,2.16,165,2.084,168,2.16,169,2.275,171,2.16,172,2.216,174,0.83,175,0.83,176,0.741,177,2.562,178,2.562,179,1.783,180,1.105,181,1.041,182,1.105,183,1.783,184,1.411,185,1.324,186,1.314,187,1.324,188,1.19,189,1.672,190,1.518,191,1.19,192,1.508,193,1.19,194,1.19,195,1.508]],["title/classes/RegisterRequestDto.html",[22,0.465,53,2.427]],["body/classes/RegisterRequestDto.html",[7,0.022,12,0.265,13,0.235,14,0.235,17,0.38,21,0.265,22,0.706,23,0.016,24,0.016,31,0.265,39,2.365,43,1.324,47,0.384,53,3.683,65,1.829,70,2.234,98,0.811,118,2.093,124,0.827,169,2.464,177,2.869,178,2.62,238,1.829,364,3.201,369,3.556,370,5.386,371,4.597,373,3.556,374,4.597,375,4.074,376,4.597,378,4.597,379,3.556,380,2.607,381,3.556,386,3.556,387,4.171,388,4.171]],["title/interfaces/RegisterResponse.html",[161,0.2,179,1.465]],["body/interfaces/RegisterResponse.html",[7,0.022,12,0.192,13,0.17,14,0.17,17,0.275,21,0.43,23,0.013,24,0.013,30,1.897,31,0.192,35,1.411,36,1.411,47,0.308,51,0.922,61,0.551,66,1.451,67,0.622,68,1.172,69,1.105,80,0.551,89,0.586,98,0.651,103,0.93,115,1.583,120,1.343,124,0.9,141,1.244,153,1.244,158,1.897,161,0.36,162,0.741,163,1.244,164,2.16,165,2.084,168,2.16,169,2.084,171,2.16,172,2.216,174,0.83,175,0.83,176,0.741,177,1.897,178,1.897,179,2.084,180,1.329,181,1.204,182,1.329,183,1.783,184,1.411,185,1.324,186,1.314,187,1.324,188,1.19,189,1.672,190,1.518,191,1.19,192,1.508,193,1.19,194,1.19,195,1.508]],["title/classes/RegisterResponseDto.html",[22,0.465,75,2.427]],["body/classes/RegisterResponseDto.html",[7,0.022,12,0.292,13,0.258,14,0.258,17,0.364,21,0.292,22,0.599,23,0.017,24,0.017,31,0.292,39,2.51,43,1.405,47,0.408,65,2.009,70,2.454,75,3.909,98,0.861,118,2.222,124,0.749,179,2.574,180,1.365,181,1.18,182,1.365,238,2.009,364,3.605,389,3.906,390,4.582,391,4.582]],["title/interfaces/RequestWithUser.html",[113,2.427,161,0.2]],["body/interfaces/RequestWithUser.html",[7,0.021,12,0.321,13,0.284,14,0.284,17,0.321,21,0.321,23,0.018,24,0.018,31,0.321,47,0.359,98,0.913,113,4.146,161,0.284,162,1.238,392,4.298,393,5.175,394,6.512,395,6.759,396,4.298]],["title/interfaces/SetSpreadRequest.html",[161,0.2,333,1.3]],["body/interfaces/SetSpreadRequest.html",[7,0.022,12,0.18,13,0.159,14,0.159,17,0.263,21,0.433,23,0.012,24,0.012,31,0.18,47,0.202,51,0.89,61,0.517,66,1.488,67,0.584,80,0.517,89,0.55,98,0.622,120,1.323,124,0.84,161,0.367,162,0.696,167,1.604,174,0.78,175,0.78,176,0.696,180,0.904,181,1.402,182,1.066,186,1.268,188,1.137,189,1.637,190,1.475,191,1.137,193,1.137,194,1.137,201,1.513,202,1.169,203,1.704,222,0.979,223,0.925,229,2.177,274,1.038,277,1.169,309,1.704,323,1.038,326,1.038,327,1.243,328,1.812,329,1.812,330,1.894,332,1.243,333,1.962,335,1.812,336,1.894,338,1.243,339,1.894,341,1.513,342,1.513,343,1.243,344,1.243,345,1.243,346,1.243,347,1.243,348,1.243,349,1.243,350,1.243,351,1.604,352,1.243,353,1.243,354,1.1,355,1.1,356,1.243,357,1.243,358,1.169]],["title/classes/SetSpreadRequestDto.html",[22,0.465,209,2.427]],["body/classes/SetSpreadRequestDto.html",[7,0.022,12,0.306,13,0.27,14,0.27,17,0.375,21,0.306,22,0.629,23,0.018,24,0.018,31,0.306,39,2.109,43,1.181,47,0.343,65,2.109,98,0.887,118,2.29,181,1.216,209,4.029,224,2.775,229,2.335,238,2.109,333,2.335,364,3.417,397,4.101,398,4.81]],["title/classes/SetSpreadResponceDto.html",[22,0.465,218,2.427]],["body/classes/SetSpreadResponceDto.html",[7,0.022,12,0.292,13,0.258,14,0.258,17,0.364,21,0.292,22,0.599,23,0.017,24,0.017,31,0.292,39,2.51,43,1.405,47,0.408,65,2.009,98,0.861,118,2.222,124,0.749,180,1.365,181,1.18,182,1.365,218,3.909,224,2.643,238,2.009,342,2.285,364,3.605,399,3.906,400,4.582,401,4.582]],["title/interfaces/SetSpreadResponse.html",[161,0.2,342,1.3]],["body/interfaces/SetSpreadResponse.html",[7,0.022,12,0.178,13,0.157,14,0.157,17,0.26,21,0.432,23,0.012,24,0.012,31,0.178,47,0.291,51,0.882,61,0.509,66,1.482,67,0.575,80,0.509,89,0.542,98,0.615,120,1.318,124,0.862,161,0.365,162,0.685,167,1.586,174,0.768,175,0.768,176,0.685,180,1.238,181,1.398,182,1.293,186,1.256,188,1.124,189,1.628,190,1.464,191,1.124,193,1.124,194,1.124,201,1.495,202,1.151,203,1.684,222,0.964,223,0.91,229,1.769,274,1.021,277,1.151,309,1.684,323,1.021,326,1.021,327,1.224,328,1.792,329,1.792,330,1.877,332,1.224,333,1.769,335,1.792,336,1.877,338,1.224,339,1.877,341,1.495,342,1.769,343,1.224,344,1.224,345,1.224,346,1.224,347,1.224,348,1.224,349,1.224,350,1.224,351,1.586,352,1.224,353,1.224,354,1.083,355,1.083,356,1.224,357,1.224,358,1.151]],["title/interfaces/SubscribeFeedRequest.html",[161,0.2,336,1.379]],["body/interfaces/SubscribeFeedRequest.html",[7,0.022,12,0.178,13,0.157,14,0.157,17,0.26,21,0.432,23,0.012,24,0.012,31,0.178,47,0.291,51,0.882,61,0.509,66,1.482,67,0.575,80,0.509,89,0.542,98,0.615,120,1.318,124,0.88,161,0.365,162,0.685,167,1.586,174,0.768,175,0.768,176,0.685,180,0.893,181,1.373,182,1.057,186,1.256,188,1.124,189,1.628,190,1.464,191,1.124,193,1.124,194,1.124,201,1.495,202,1.151,203,1.684,222,0.964,223,0.91,229,1.769,274,1.021,277,2.194,309,2.335,323,1.021,326,1.021,327,1.224,328,1.792,329,1.792,330,1.877,332,1.224,333,1.769,335,1.792,336,2.066,338,1.224,339,1.877,341,1.495,342,1.495,343,1.224,344,1.224,345,1.224,346,1.224,347,1.224,348,1.224,349,1.224,350,1.224,351,1.586,352,1.224,353,1.224,354,1.083,355,1.083,356,1.224,357,1.224,358,1.151]],["title/interfaces/SubscribeFeedResponse.html",[161,0.2,274,1.3]],["body/interfaces/SubscribeFeedResponse.html",[7,0.022,12,0.16,13,0.142,14,0.142,17,0.241,21,0.424,23,0.011,24,0.011,31,0.16,47,0.443,51,0.83,61,0.459,66,1.442,67,0.519,80,0.459,89,0.488,98,0.569,120,1.282,124,0.842,161,0.356,162,0.618,167,1.469,174,0.692,175,0.692,176,0.618,180,0.827,181,1.465,182,0.994,186,1.182,188,1.041,189,1.567,190,1.391,191,1.041,193,1.041,194,1.041,201,1.385,202,1.038,203,1.56,222,0.869,223,0.821,229,2.085,274,1.385,277,1.038,309,1.56,323,0.921,326,0.921,327,1.104,328,1.66,329,1.66,330,1.766,332,1.104,333,1.665,335,1.66,336,1.766,338,1.104,339,1.766,341,1.385,342,1.385,343,2.218,344,2.218,345,2.218,346,2.218,347,2.218,348,2.218,349,2.218,350,2.218,351,1.469,352,1.104,353,1.104,354,0.977,355,0.977,356,1.104,357,1.104,358,1.038]],["title/interfaces/UnsubscribeFeedRequest.html",[161,0.2,339,1.379]],["body/interfaces/UnsubscribeFeedRequest.html",[7,0.022,12,0.18,13,0.159,14,0.159,17,0.263,21,0.433,23,0.012,24,0.012,31,0.18,47,0.202,51,0.89,61,0.517,66,1.488,67,0.584,80,0.517,89,0.55,98,0.622,120,1.323,124,0.865,161,0.367,162,0.696,167,1.604,174,0.78,175,0.78,176,0.696,180,0.904,181,1.377,182,1.066,186,1.268,188,1.137,189,1.637,190,1.475,191,1.137,193,1.137,194,1.137,201,1.513,202,1.169,203,1.704,222,0.979,223,0.925,229,1.785,274,1.038,277,1.169,309,2.349,323,1.038,326,1.038,327,1.243,328,1.812,329,1.812,330,1.894,332,1.243,333,1.785,335,1.812,336,1.894,338,1.243,339,2.081,341,1.513,342,1.513,343,1.243,344,1.243,345,1.243,346,1.243,347,1.243,348,1.243,349,1.243,350,1.243,351,1.604,352,1.243,353,1.243,354,1.1,355,1.1,356,1.243,357,1.243,358,1.169]],["title/interfaces/UnsubscribeFeedResponse.html",[161,0.2,351,1.379]],["body/interfaces/UnsubscribeFeedResponse.html",[7,0.022,12,0.178,13,0.157,14,0.157,17,0.26,21,0.432,23,0.012,24,0.012,31,0.178,47,0.291,51,0.882,61,0.509,66,1.482,67,0.575,80,0.509,89,0.542,98,0.615,120,1.318,124,0.862,161,0.365,162,0.685,167,1.586,174,0.768,175,0.768,176,0.685,180,0.893,181,1.373,182,1.293,186,1.256,188,1.124,189,1.628,190,1.464,191,1.124,193,1.124,194,1.124,201,1.495,202,1.151,203,1.684,222,0.964,223,0.91,229,1.769,274,1.021,277,1.151,309,1.684,323,1.021,326,1.021,327,1.224,328,1.792,329,1.792,330,1.877,332,1.224,333,1.769,335,1.792,336,1.877,338,1.224,339,1.877,341,1.495,342,1.495,343,1.224,344,1.224,345,1.224,346,1.224,347,1.224,348,1.224,349,1.224,350,1.224,351,1.877,352,2.333,353,2.12,354,1.083,355,1.083,356,1.224,357,1.224,358,1.151]],["title/interfaces/ValidateRequest.html",[161,0.2,172,1.558]],["body/interfaces/ValidateRequest.html",[7,0.022,12,0.195,13,0.173,14,0.173,17,0.279,21,0.432,23,0.013,24,0.013,30,1.92,31,0.195,35,1.435,36,1.435,47,0.219,51,0.931,61,0.56,66,1.458,67,0.633,68,1.192,69,1.124,80,0.56,89,0.596,98,0.658,103,0.946,115,1.602,120,1.349,124,0.902,141,1.266,153,1.266,158,2.579,161,0.362,162,0.754,163,1.266,164,2.187,165,2.103,168,2.187,169,2.103,171,2.187,172,2.439,174,0.845,175,0.845,176,0.754,177,1.92,178,1.92,179,1.805,180,1.115,181,1.051,182,1.115,183,1.805,184,1.435,185,1.346,186,1.326,187,1.346,188,1.204,189,1.682,190,1.53,191,1.204,192,1.534,193,1.204,194,1.204,195,1.534]],["title/interfaces/ValidateResponse.html",[115,1.3,161,0.2]],["body/interfaces/ValidateResponse.html",[7,0.022,12,0.189,13,0.167,14,0.167,17,0.272,21,0.429,23,0.013,24,0.013,30,1.874,31,0.189,35,1.388,36,1.388,47,0.357,51,0.914,61,0.542,66,1.444,67,0.612,68,1.152,69,1.087,80,0.542,89,0.576,98,0.643,103,0.915,115,1.833,120,1.338,124,0.909,141,1.224,153,1.224,158,1.874,161,0.358,162,0.729,163,1.224,164,2.135,165,2.064,168,2.135,169,2.064,171,2.135,172,2.196,174,0.817,175,0.817,176,0.729,177,1.874,178,1.874,179,1.762,180,1.321,181,1.196,182,1.321,183,1.762,184,2.56,185,1.302,186,1.301,187,1.302,188,1.176,189,1.663,190,1.507,191,1.176,192,1.483,193,1.176,194,1.176,195,1.483]],["title/classes/ValidationException.html",[22,0.465,402,2.427]],["body/classes/ValidationException.html",[7,0.022,12,0.287,13,0.254,14,0.254,17,0.287,18,1.653,21,0.287,22,0.591,23,0.017,24,0.017,31,0.287,43,1.392,45,1.653,46,1.473,47,0.404,48,1.653,80,0.824,98,0.853,111,3.412,124,0.811,238,1.98,393,4.836,402,3.874,403,3.85,404,6.202,405,4.685,406,5.672,407,6.202,408,5.672,409,5.672,410,4.516,411,4.516,412,4.516]],["title/injectables/ValidationPipe.html",[110,1.661,413,2.684]],["body/injectables/ValidationPipe.html",[7,0.022,12,0.248,13,0.219,14,0.219,17,0.392,18,1.427,21,0.248,22,0.757,23,0.016,24,0.016,31,0.248,32,2.003,34,3.097,43,0.957,45,1.427,46,1.272,47,0.278,48,1.427,50,1.514,51,0.942,89,1.122,110,2.412,118,1.514,120,1.192,126,2.663,127,2.249,151,2.663,153,1.608,251,3.95,380,2.437,402,2.663,405,2.946,413,3.898,414,3.324,415,4.399,416,4.399,417,4.369,418,5.247,419,3.899,420,4.399,421,3.324,422,2.946,423,3.899,424,3.324,425,3.324,426,4.399,427,3.324,428,3.324,429,3.324,430,3.324,431,3.324,432,3.324,433,3.324,434,3.324,435,3.899]],["title/guards/WsAuthGuard.html",[94,2.684,436,2.684]],["body/guards/WsAuthGuard.html",[7,0.022,12,0.233,13,0.206,14,0.206,17,0.399,18,1.34,21,0.233,22,0.479,23,0.015,24,0.015,31,0.233,32,1.92,34,3.001,43,1.214,45,1.81,46,1.613,47,0.352,48,1.81,50,1.421,51,0.903,57,2.112,80,0.903,82,2.854,83,2.288,96,2.766,98,0.551,99,4.735,100,4.777,101,5.116,102,3.121,103,1.849,105,4.217,106,5.116,108,3.121,109,4.217,110,2.312,111,2.766,115,1.34,116,3.121,117,3.121,118,1.421,119,3.121,120,1.155,123,3.737,124,0.479,126,2.5,127,2.112,128,4.217,129,3.121,130,3.121,264,4.217,271,2.766,273,2.5,436,3.737,437,3.121,438,3.661,439,3.661,440,3.121,441,3.661,442,3.661,443,3.661]],["title/injectables/WsValidationPipe.html",[110,1.661,444,2.684]],["body/injectables/WsValidationPipe.html",[7,0.022,12,0.248,13,0.219,14,0.219,17,0.392,18,1.427,21,0.248,22,0.757,23,0.016,24,0.016,31,0.248,32,2.003,34,3.097,43,0.957,45,1.427,46,1.272,47,0.278,48,1.427,50,1.514,51,0.942,89,1.122,110,2.412,118,1.514,120,1.192,126,2.663,127,2.249,151,2.663,153,1.608,251,3.95,273,2.663,380,2.437,405,2.946,415,4.399,416,4.399,417,4.369,418,5.247,420,4.399,421,3.324,422,2.946,424,3.324,425,3.324,426,4.399,427,3.324,428,3.324,429,3.324,430,3.324,431,3.324,432,3.324,433,3.324,434,3.324,440,3.324,444,3.898,445,3.324,446,3.899,447,3.899]],["title/coverage.html",[448,3.662]],["body/coverage.html",[7,0.022,14,0.143,22,0.817,23,0.012,24,0.012,25,2.387,26,1.74,28,2.172,38,1.74,47,0.181,53,1.74,68,0.989,69,0.932,72,1.74,75,1.74,94,2.885,95,1.74,97,2.172,103,0.785,110,2.141,113,1.74,115,0.932,127,1.47,141,1.05,152,2.172,161,0.388,163,2.696,165,1.05,169,1.05,172,1.117,176,0.937,179,1.05,183,1.05,185,1.117,186,1.191,187,1.117,199,1.74,200,2.172,209,1.74,218,1.74,220,1.74,222,0.88,223,0.831,237,1.74,239,1.925,274,0.932,323,0.932,326,2.443,330,0.989,333,0.932,336,0.989,339,0.989,341,0.932,342,0.932,351,0.989,354,0.989,355,0.989,363,2.172,368,2.172,382,2.172,386,2.172,389,2.172,392,2.172,397,2.172,399,2.172,402,1.74,403,2.172,413,1.925,414,2.172,436,1.925,437,2.172,444,1.925,445,2.172,448,1.925,449,2.547,450,2.547,451,2.547,452,7.294,453,6.611,454,6.357,455,5.935,456,6.357,457,5.723,458,2.547,459,3.819,460,2.547,461,2.172,462,2.172,463,2.547,464,2.547]],["title/dependencies.html",[3,2.671,148,2.027]],["body/dependencies.html",[3,2.725,7,0.022,18,1.596,22,0.726,23,0.017,24,0.017,61,0.796,65,1.912,67,0.898,271,3.293,273,2.977,380,2.725,396,3.717,417,3.293,422,3.293,465,4.359,466,4.359,467,4.359,468,4.359,469,4.359,470,4.359,471,4.359,472,4.359,473,4.359,474,4.359,475,4.359,476,4.359,477,6.422,478,4.359,479,4.359,480,4.359,481,5.547,482,5.547,483,4.359,484,4.359,485,4.359,486,4.359,487,4.359,488,4.359,489,4.359,490,4.359,491,4.359,492,4.359,493,4.359,494,4.359]],["title/miscellaneous/functions.html",[495,1.712,496,3.643]],["body/miscellaneous/functions.html",[7,0.019,23,0.019,24,0.019,31,0.336,163,2.174,187,2.911,326,1.93,355,2.577,461,4.497,462,5.66,495,3.043,496,4.497,497,4.497,498,4.497,499,5.274]],["title/index.html",[31,0.189,500,2.968,501,2.968]],["body/index.html",[7,0.022,13,0.226,23,0.016,24,0.016,257,3.431,286,3.431,375,3.04,448,3.04,502,4.024,503,4.024,504,5.268,505,4.024,506,4.024,507,4.024,508,4.024,509,4.024,510,3.431,511,5.873,512,4.024,513,4.024,514,4.024,515,6.76,516,4.024,517,4.024,518,4.024,519,6.635,520,4.024,521,4.024,522,5.268,523,4.024,524,4.024,525,4.024,526,4.024,527,5.268,528,5.268,529,4.024,530,4.024,531,4.024,532,5.268,533,5.268,534,4.024,535,4.024,536,4.024,537,4.024,538,4.024,539,3.431,540,4.024,541,4.024,542,4.024,543,4.024,544,4.024,545,4.024,546,4.024,547,4.024,548,4.024,549,3.431,550,4.024,551,4.024,552,4.024,553,4.024,554,4.024,555,4.024,556,3.431]],["title/modules.html",[2,2.796]],["body/modules.html",[1,3.648,2,3.082,6,3.339,7,0.019,8,3.339,23,0.019,24,0.019,539,5.356,557,6.282,558,6.282,559,6.674,560,5.341,561,5.341]],["title/overview.html",[562,4.133]],["body/overview.html",[1,4.706,2,2.682,3,3.611,4,3.964,5,3.964,6,4.307,7,0.021,8,3.928,9,4.364,10,3.513,11,3.513,23,0.017,24,0.017,27,2.906,96,3.513,103,2.152,131,3.964,132,3.964,133,3.964,151,3.176,162,1.141,238,2.039,562,3.964,563,5.777,564,5.777,565,4.65,566,4.65]],["title/properties.html",[98,0.643,148,2.027]],["body/properties.html",[7,0.022,23,0.019,24,0.019,98,0.817,510,4.633,549,4.633,556,4.633,567,5.434,568,5.434,569,5.434]],["title/miscellaneous/typealiases.html",[495,1.712,570,4.273]],["body/miscellaneous/typealiases.html",[7,0.019,23,0.019,24,0.019,31,0.347,47,0.453,239,4.123,275,5.424,495,3.148,571,5.457,572,5.457,573,5.457]],["title/miscellaneous/variables.html",[495,1.712,574,3.643]],["body/miscellaneous/variables.html",[7,0.022,23,0.017,24,0.017,30,2.449,31,0.28,47,0.484,69,2.044,103,1.357,124,0.889,141,2.302,163,1.816,176,1.583,201,2.044,223,1.821,250,5.795,251,4.642,323,2.044,326,1.612,358,1.816,495,2.541,497,5.227,498,5.227,574,3.756]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0.0.0.0:50051",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["0.0.0.0:50052",{"_index":324,"title":{},"body":{"modules/BinanceModule.html":{}}}],["0.0.1",{"_index":568,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":566,"title":{},"body":{"overview.html":{}}}],["2",{"_index":564,"title":{},"body":{"overview.html":{}}}],["3",{"_index":563,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["7.5.6",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":374,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["8.1.0",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":565,"title":{},"body":{"overview.html":{}}}],["9.0.8",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["9.0.9",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["_server",{"_index":261,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["afterinit",{"_index":246,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["afterinit(_server",{"_index":259,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["aliases",{"_index":571,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":540,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["apioperation({summary",{"_index":40,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["apiproperty",{"_index":364,"title":{},"body":{"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{}}}],["apiproperty()@isemail",{"_index":369,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["apiproperty()@minlength(8",{"_index":373,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["apiresponse",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["apisecurity",{"_index":215,"title":{},"body":{"controllers/BinanceController.html":{}}}],["apisecurity('authorization",{"_index":230,"title":{},"body":{"controllers/BinanceController.html":{}}}],["apitags",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["apitags('auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('binance",{"_index":225,"title":{},"body":{"controllers/BinanceController.html":{}}}],["app",{"_index":517,"title":{},"body":{"index.html":{}}}],["applications",{"_index":509,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":265,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["argumentmetadata",{"_index":418,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["ask",{"_index":348,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["askvolume",{"_index":349,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["assets",{"_index":306,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["async",{"_index":34,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["auth",{"_index":30,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.pb",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{}}}],["auth.service",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.pb",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["auth/auth.service",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["auth_package_name",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_service_name",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":26,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":95,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/BinanceController.html":{},"coverage.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":549,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BinanceController.html":{},"guards/WsAuthGuard.html":{}}}],["authorization'])@get('spread')@useguards(authguard",{"_index":206,"title":{},"body":{"controllers/BinanceController.html":{}}}],["authorization'])@post('spread')@useguards(authguard",{"_index":212,"title":{},"body":{"controllers/BinanceController.html":{}}}],["authorization.split",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["authservice",{"_index":103,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"guards/WsAuthGuard.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authserviceclient",{"_index":68,"title":{"interfaces/AuthServiceClient.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["authservicecontroller",{"_index":185,"title":{"interfaces/AuthServiceController.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["authservicecontrollermethods",{"_index":187,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":561,"title":{},"body":{"modules.html":{}}}],["await",{"_index":429,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["backers",{"_index":541,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["bearer.length",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["bid",{"_index":346,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["bidvolume",{"_index":347,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["binance",{"_index":201,"title":{},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"miscellaneous/variables.html":{}}}],["binance.controller",{"_index":321,"title":{},"body":{"modules/BinanceModule.html":{}}}],["binance.gateway",{"_index":322,"title":{},"body":{"modules/BinanceModule.html":{}}}],["binance.pb",{"_index":224,"title":{},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"classes/GetSpreadResponceDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{}}}],["binance/binance.module",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["binance_package_name",{"_index":323,"title":{},"body":{"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["binance_service_name",{"_index":223,"title":{},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["binancecontroller",{"_index":199,"title":{"controllers/BinanceController.html":{}},"body":{"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"coverage.html":{}}}],["binancegateway",{"_index":237,"title":{"classes/BinanceGateway.html":{}},"body":{"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"coverage.html":{}}}],["binancemodule",{"_index":8,"title":{"modules/BinanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"modules.html":{},"overview.html":{}}}],["binanceservice",{"_index":358,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"miscellaneous/variables.html":{}}}],["binanceserviceclient",{"_index":222,"title":{"interfaces/BinanceServiceClient.html":{}},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["binanceservicecontroller",{"_index":354,"title":{"interfaces/BinanceServiceController.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["binanceservicecontrollermethods",{"_index":355,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["body",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["boolean",{"_index":353,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["bootstrap",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":559,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":557,"title":{},"body":{"modules.html":{}}}],["btcusdt",{"_index":299,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["building",{"_index":505,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["canactivate(ctx",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["class",{"_index":22,"title":{"classes/BinanceGateway.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"classes/ValidationException.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":238,"title":{},"body":{"classes/BinanceGateway.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"classes/ValidationException.html":{},"overview.html":{}}}],["client",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{}}}],["client.data['user",{"_index":295,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["client.emit('feed",{"_index":313,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["client.handshake.headers['authorization",{"_index":442,"title":{},"body":{"guards/WsAuthGuard.html":{}}}],["client.handshake.query.ticker",{"_index":298,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["client.id",{"_index":293,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["clientgrpc",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["clientid",{"_index":309,"title":{},"body":{"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["clientsmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["clientsmodule.register",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["common/guard/auth.guard",{"_index":216,"title":{},"body":{"controllers/BinanceController.html":{}}}],["connected",{"_index":292,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["connection",{"_index":294,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["connection.market",{"_index":302,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["connectiondata",{"_index":275,"title":{},"body":{"classes/BinanceGateway.html":{},"miscellaneous/typealiases.html":{}}}],["connections",{"_index":243,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["const",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"guards/WsAuthGuard.html":{}}}],["constructor(client",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/BinanceGateway.html":{}}}],["constructor(responce",{"_index":406,"title":{},"body":{"classes/ValidationException.html":{}}}],["constructor(service",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["controller",{"_index":25,"title":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('binance",{"_index":226,"title":{},"body":{"controllers/BinanceController.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"overview.html":{}}}],["cors",{"_index":280,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["coverage",{"_index":448,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["ctx",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ctx.switchtows().getclient",{"_index":441,"title":{},"body":{"guards/WsAuthGuard.html":{}}}],["custom",{"_index":425,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["data",{"_index":268,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["decorators",{"_index":39,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{}}}],["default",{"_index":250,"title":{},"body":{"classes/BinanceGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":510,"title":{},"body":{"index.html":{},"properties.html":{}}}],["descriptor",{"_index":190,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["development",{"_index":518,"title":{},"body":{"index.html":{}}}],["disable",{"_index":283,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["disconnected",{"_index":318,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["documentation",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["dto/getspreadresponce.dto",{"_index":221,"title":{},"body":{"controllers/BinanceController.html":{}}}],["dto/loginrequest.dto",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/loginresponse.dto",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/registerrequest.dto",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/registerresponse.dto",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/setspreadrequest.dto",{"_index":217,"title":{},"body":{"controllers/BinanceController.html":{}}}],["dto/setspreadresponce.dto",{"_index":219,"title":{},"body":{"controllers/BinanceController.html":{}}}],["e2e",{"_index":529,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":506,"title":{},"body":{"index.html":{}}}],["email",{"_index":177,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["empty",{"_index":330,"title":{"interfaces/Empty.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["err.property",{"_index":433,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["error",{"_index":182,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["errors",{"_index":428,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["errors.length",{"_index":431,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["errors.map((err",{"_index":432,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["eslint",{"_index":282,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["eslint/no",{"_index":287,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["event",{"_index":267,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["exception/validation.exception",{"_index":423,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["executioncontext",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["export",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["extends",{"_index":393,"title":{},"body":{"interfaces/RequestWithUser.html":{},"classes/ValidationException.html":{}}}],["fastify",{"_index":396,"title":{},"body":{"interfaces/RequestWithUser.html":{},"dependencies.html":{}}}],["fastify/cors",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["fastify/helmet",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["fastifyrequest",{"_index":394,"title":{},"body":{"interfaces/RequestWithUser.html":{}}}],["feed",{"_index":300,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["feeditem",{"_index":311,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["feeds",{"_index":307,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{}}}],["firstvaluefrom",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(this.svc.validate",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":504,"title":{},"body":{"index.html":{}}}],["function",{"_index":186,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["functions",{"_index":496,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('spread",{"_index":231,"title":{},"body":{"controllers/BinanceController.html":{}}}],["getspread",{"_index":202,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["getspread(request",{"_index":329,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["getspreadresponcedto",{"_index":220,"title":{"classes/GetSpreadResponceDto.html":{}},"body":{"controllers/BinanceController.html":{},"classes/GetSpreadResponceDto.html":{},"coverage.html":{}}}],["getspreadresponcedto})@apisecurity('authorization",{"_index":205,"title":{},"body":{"controllers/BinanceController.html":{}}}],["getspreadresponse",{"_index":341,"title":{"interfaces/GetSpreadResponse.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["getting",{"_index":500,"title":{"index.html":{}},"body":{}}],["global",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":560,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":536,"title":{},"body":{"index.html":{}}}],["grpc/grpc",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["grpcmethod",{"_index":174,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["grpcmethod('authservice",{"_index":192,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["grpcmethod('binanceservice",{"_index":356,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcmethods",{"_index":188,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["grpcstreammethod",{"_index":175,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["grpcstreammethod('authservice",{"_index":195,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["grpcstreammethod('binanceservice",{"_index":357,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcstreammethods",{"_index":194,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["guard",{"_index":94,"title":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{},"overview.html":{}}}],["handleconnection",{"_index":247,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["handleconnection(client",{"_index":263,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["handledisconnect",{"_index":248,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["handledisconnect(client",{"_index":269,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["here",{"_index":546,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":404,"title":{},"body":{"classes/ValidationException.html":{}}}],["https://nestjs.com",{"_index":553,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ValidationException.html":{},"guards/WsAuthGuard.html":{}}}],["httpstatus.bad_request",{"_index":411,"title":{},"body":{"classes/ValidationException.html":{}}}],["identifier",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":304,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["implements",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BinanceGateway.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["inject",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{}}}],["inject(auth_service_name",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["inject(authservice",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["inject(binance_service_name",{"_index":227,"title":{},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{},"overview.html":{}}}],["installation",{"_index":514,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":516,"title":{},"body":{"index.html":{}}}],["interface",{"_index":161,"title":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["interface/reqwithuser.interface",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["interfaces",{"_index":162,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"overview.html":{}}}],["isemail",{"_index":378,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["join",{"_index":543,"title":{},"body":{"index.html":{}}}],["js",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":550,"title":{},"body":{"index.html":{}}}],["license",{"_index":556,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":533,"title":{},"body":{"index.html":{}}}],["line",{"_index":285,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["literal",{"_index":573,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["loader",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":244,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["logger('appgateway",{"_index":254,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["login",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["login'})@apiresponse({type",{"_index":41,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":37,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(request",{"_index":164,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["loginrequest",{"_index":165,"title":{"interfaces/LoginRequest.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["loginrequestdto",{"_index":38,"title":{"classes/LoginRequestDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginRequestDto.html":{},"coverage.html":{}}}],["loginresponse",{"_index":183,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":72,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["loginresponsedto})@put('login",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{}}}],["map",{"_index":252,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["market",{"_index":277,"title":{},"body":{"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["marketfeed",{"_index":276,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["marketfeed.subscribe",{"_index":310,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["matching",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":370,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["messages",{"_index":405,"title":{},"body":{"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["metadata",{"_index":417,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{},"dependencies.html":{}}}],["metadata.type",{"_index":424,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["method",{"_index":189,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["method)(constructor.prototype[method",{"_index":193,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["minlength",{"_index":379,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["minlength(8",{"_index":381,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["miscellaneous",{"_index":495,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":532,"title":{},"body":{"index.html":{}}}],["mode",{"_index":522,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BinanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BinanceModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":375,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{},"index.html":{}}}],["multiple",{"_index":305,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["myśliwiec",{"_index":551,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["namespace",{"_index":279,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["nest",{"_index":511,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":555,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{},"classes/GetSpreadResponceDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":273,"title":{},"body":{"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"dependencies.html":{}}}],["never",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["new",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BinanceGateway.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":284,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["node.js",{"_index":503,"title":{},"body":{"index.html":{}}}],["npm",{"_index":515,"title":{},"body":{"index.html":{}}}],["null",{"_index":296,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["number",{"_index":181,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["obj",{"_index":426,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["object.values(err.constraints).join",{"_index":434,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["observable",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["ongatewayconnection",{"_index":241,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["ongatewaydisconnect",{"_index":242,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["ongatewayinit",{"_index":240,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["open",{"_index":534,"title":{},"body":{"index.html":{}}}],["optional",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["options",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["origin",{"_index":281,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":562,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":148,"title":{"dependencies.html":{},"properties.html":{}},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["password",{"_index":178,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["pg",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["pipetransform",{"_index":420,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["plaintoclass",{"_index":421,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["plaintoclass(metadata.metatype",{"_index":427,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["please",{"_index":544,"title":{},"body":{"index.html":{}}}],["post",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["post('register",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('spread",{"_index":234,"title":{},"body":{"controllers/BinanceController.html":{}}}],["prefix",{"_index":29,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["private",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["production",{"_index":524,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":502,"title":{},"body":{"index.html":{}}}],["project",{"_index":535,"title":{},"body":{"index.html":{}}}],["promise",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["properties",{"_index":98,"title":{"properties.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BinanceGateway.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"guards/WsAuthGuard.html":{},"properties.html":{}}}],["proto/auth.proto",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["proto/binance.proto",{"_index":325,"title":{},"body":{"modules/BinanceModule.html":{}}}],["protobufpackage",{"_index":176,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["protopath",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["public",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/WsAuthGuard.html":{}}}],["pubsub",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["put",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":545,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{}}}],["realask",{"_index":345,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["realbid",{"_index":344,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["record",{"_index":407,"title":{},"body":{"classes/ValidationException.html":{}}}],["reflect",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["reflect.getownpropertydescriptor(constructor.prototype",{"_index":191,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["register",{"_index":36,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["register'})@apiresponse({type",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(request",{"_index":168,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["registerrequest",{"_index":169,"title":{"interfaces/RegisterRequest.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["registerrequestdto",{"_index":53,"title":{"classes/RegisterRequestDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterRequestDto.html":{},"coverage.html":{}}}],["registerresponse",{"_index":179,"title":{"interfaces/RegisterResponse.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["registerresponsedto",{"_index":75,"title":{"classes/RegisterResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterResponseDto.html":{},"coverage.html":{}}}],["registerresponsedto})@post('register",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":513,"title":{},"body":{"index.html":{}}}],["req",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.headers['authorization",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request",{"_index":167,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["requestwithuser",{"_index":113,"title":{"interfaces/RequestWithUser.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/RequestWithUser.html":{},"coverage.html":{}}}],["res",{"_index":316,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["responce",{"_index":409,"title":{},"body":{"classes/ValidationException.html":{}}}],["result",{"_index":352,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["results",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["returns",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["rimraf",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":519,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"dependencies.html":{}}}],["scalable",{"_index":507,"title":{},"body":{"index.html":{}}}],["server",{"_index":257,"title":{},"body":{"classes/BinanceGateway.html":{},"index.html":{}}}],["service",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WsAuthGuard.html":{}}}],["set",{"_index":210,"title":{},"body":{"controllers/BinanceController.html":{}}}],["setspread",{"_index":203,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["setspread(@body",{"_index":235,"title":{},"body":{"controllers/BinanceController.html":{}}}],["setspread(body",{"_index":208,"title":{},"body":{"controllers/BinanceController.html":{}}}],["setspread(request",{"_index":332,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["setspreadrequest",{"_index":333,"title":{"interfaces/SetSpreadRequest.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["setspreadrequestdto",{"_index":209,"title":{"classes/SetSpreadRequestDto.html":{}},"body":{"controllers/BinanceController.html":{},"classes/SetSpreadRequestDto.html":{},"coverage.html":{}}}],["setspreadresponcedto",{"_index":218,"title":{"classes/SetSpreadResponceDto.html":{}},"body":{"controllers/BinanceController.html":{},"classes/SetSpreadResponceDto.html":{},"coverage.html":{}}}],["setspreadresponcedto})@apisecurity('authorization",{"_index":211,"title":{},"body":{"controllers/BinanceController.html":{}}}],["setspreadresponse",{"_index":342,"title":{"interfaces/SetSpreadResponse.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["side",{"_index":508,"title":{},"body":{"index.html":{}}}],["socket",{"_index":264,"title":{},"body":{"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{}}}],["socket.io",{"_index":271,"title":{},"body":{"classes/BinanceGateway.html":{},"guards/WsAuthGuard.html":{},"dependencies.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"modules/BinanceModule.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":538,"title":{},"body":{"index.html":{}}}],["spread",{"_index":229,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["spread'})@apiresponse({type",{"_index":204,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/.../auth.pb.ts",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../binance.gateway.ts",{"_index":572,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../binance.pb.ts",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":28,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.pb.ts",{"_index":163,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.pb.ts:41",{"_index":170,"title":{},"body":{"interfaces/AuthServiceClient.html":{}}}],["src/auth/auth.pb.ts:43",{"_index":166,"title":{},"body":{"interfaces/AuthServiceClient.html":{}}}],["src/auth/auth.pb.ts:45",{"_index":173,"title":{},"body":{"interfaces/AuthServiceClient.html":{}}}],["src/auth/auth.pb.ts:49",{"_index":197,"title":{},"body":{"interfaces/AuthServiceController.html":{}}}],["src/auth/auth.pb.ts:51",{"_index":196,"title":{},"body":{"interfaces/AuthServiceController.html":{}}}],["src/auth/auth.pb.ts:53",{"_index":198,"title":{},"body":{"interfaces/AuthServiceController.html":{}}}],["src/auth/auth.service.ts",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:17",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/loginrequest.dto.ts",{"_index":368,"title":{},"body":{"classes/LoginRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/loginrequest.dto.ts:12",{"_index":377,"title":{},"body":{"classes/LoginRequestDto.html":{}}}],["src/auth/dto/loginrequest.dto.ts:8",{"_index":372,"title":{},"body":{"classes/LoginRequestDto.html":{}}}],["src/auth/dto/loginresponse.dto.ts",{"_index":382,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/loginresponse.dto.ts:12",{"_index":385,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/loginresponse.dto.ts:6",{"_index":384,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/loginresponse.dto.ts:9",{"_index":383,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/registerrequest.dto.ts",{"_index":386,"title":{},"body":{"classes/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/registerrequest.dto.ts:12",{"_index":388,"title":{},"body":{"classes/RegisterRequestDto.html":{}}}],["src/auth/dto/registerrequest.dto.ts:8",{"_index":387,"title":{},"body":{"classes/RegisterRequestDto.html":{}}}],["src/auth/dto/registerresponse.dto.ts",{"_index":389,"title":{},"body":{"classes/RegisterResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/registerresponse.dto.ts:6",{"_index":391,"title":{},"body":{"classes/RegisterResponseDto.html":{}}}],["src/auth/dto/registerresponse.dto.ts:9",{"_index":390,"title":{},"body":{"classes/RegisterResponseDto.html":{}}}],["src/binance/binance.controller.ts",{"_index":200,"title":{},"body":{"controllers/BinanceController.html":{},"coverage.html":{}}}],["src/binance/binance.controller.ts:28",{"_index":207,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.controller.ts:37",{"_index":213,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.gateway.ts",{"_index":239,"title":{},"body":{"classes/BinanceGateway.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/binance/binance.gateway.ts:27",{"_index":256,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:28",{"_index":255,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:29",{"_index":253,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:30",{"_index":249,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:40",{"_index":260,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:45",{"_index":266,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.gateway.ts:77",{"_index":270,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["src/binance/binance.module.ts",{"_index":320,"title":{},"body":{"modules/BinanceModule.html":{}}}],["src/binance/binance.pb.ts",{"_index":326,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/binance/binance.pb.ts:53",{"_index":331,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:55",{"_index":334,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:57",{"_index":337,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:59",{"_index":340,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:63",{"_index":359,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:65",{"_index":360,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:69",{"_index":361,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:71",{"_index":362,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/dto/getspreadresponce.dto.ts",{"_index":363,"title":{},"body":{"classes/GetSpreadResponceDto.html":{},"coverage.html":{}}}],["src/binance/dto/getspreadresponce.dto.ts:12",{"_index":366,"title":{},"body":{"classes/GetSpreadResponceDto.html":{}}}],["src/binance/dto/getspreadresponce.dto.ts:6",{"_index":367,"title":{},"body":{"classes/GetSpreadResponceDto.html":{}}}],["src/binance/dto/getspreadresponce.dto.ts:9",{"_index":365,"title":{},"body":{"classes/GetSpreadResponceDto.html":{}}}],["src/binance/dto/setspreadrequest.dto.ts",{"_index":397,"title":{},"body":{"classes/SetSpreadRequestDto.html":{},"coverage.html":{}}}],["src/binance/dto/setspreadrequest.dto.ts:6",{"_index":398,"title":{},"body":{"classes/SetSpreadRequestDto.html":{}}}],["src/binance/dto/setspreadresponce.dto.ts",{"_index":399,"title":{},"body":{"classes/SetSpreadResponceDto.html":{},"coverage.html":{}}}],["src/binance/dto/setspreadresponce.dto.ts:6",{"_index":401,"title":{},"body":{"classes/SetSpreadResponceDto.html":{}}}],["src/binance/dto/setspreadresponce.dto.ts:9",{"_index":400,"title":{},"body":{"classes/SetSpreadResponceDto.html":{}}}],["src/common/exception/validation.exception.ts",{"_index":403,"title":{},"body":{"classes/ValidationException.html":{},"coverage.html":{}}}],["src/common/exception/validation.exception.ts:4",{"_index":408,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/common/guard/auth.guard.ts",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/common/guard/auth.guard.ts:13",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guard/auth.guard.ts:7",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guard/wsauth.guard.ts",{"_index":437,"title":{},"body":{"guards/WsAuthGuard.html":{},"coverage.html":{}}}],["src/common/guard/wsauth.guard.ts:14",{"_index":439,"title":{},"body":{"guards/WsAuthGuard.html":{}}}],["src/common/guard/wsauth.guard.ts:8",{"_index":438,"title":{},"body":{"guards/WsAuthGuard.html":{}}}],["src/common/interface/reqwithuser.interface.ts",{"_index":392,"title":{},"body":{"interfaces/RequestWithUser.html":{},"coverage.html":{}}}],["src/common/pipe/validation.pipe.ts",{"_index":414,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipe/validation.pipe.ts:8",{"_index":419,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipe/wsvalidation.pipe.ts",{"_index":445,"title":{},"body":{"injectables/WsValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipe/wsvalidation.pipe.ts:8",{"_index":446,"title":{},"body":{"injectables/WsValidationPipe.html":{}}}],["src/main.ts",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":520,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":523,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":525,"title":{},"body":{"index.html":{}}}],["started",{"_index":501,"title":{"index.html":{}},"body":{}}],["starter",{"_index":512,"title":{},"body":{"index.html":{}}}],["statements",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":180,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["stay",{"_index":547,"title":{},"body":{"index.html":{}}}],["string",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"guards/WsAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["subscribe",{"_index":315,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["subscribefeed",{"_index":327,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["subscribefeed(request",{"_index":335,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["subscribefeedrequest",{"_index":336,"title":{"interfaces/SubscribeFeedRequest.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["subscribefeedresponse",{"_index":274,"title":{"interfaces/SubscribeFeedResponse.html":{}},"body":{"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["summary",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BinanceController.html":{}}}],["super(responce",{"_index":410,"title":{},"body":{"classes/ValidationException.html":{}}}],["support",{"_index":539,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":301,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["svc",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["svg",{"_index":558,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":343,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["symbols",{"_index":376,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["table",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":528,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":531,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":530,"title":{},"body":{"index.html":{}}}],["tests",{"_index":527,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":537,"title":{},"body":{"index.html":{}}}],["this.client.getservice(auth_service_name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.client.getservice(binance_service_name",{"_index":228,"title":{},"body":{"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["this.connections.delete(client.id",{"_index":319,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.connections.set(client.id",{"_index":303,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.logger.log('feeditem",{"_index":312,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.logger.log('initialized",{"_index":290,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.logger.log(`client",{"_index":291,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.logger.log(res.result",{"_index":317,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.messages",{"_index":412,"title":{},"body":{"classes/ValidationException.html":{}}}],["this.svc",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{}}}],["this.svc.getspread",{"_index":233,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.svc.login(body",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.svc.register(body",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.svc.setspread(body",{"_index":236,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.svc.subscribefeed",{"_index":308,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["this.svc.unsubscribefeed",{"_index":314,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["throw",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["ticker",{"_index":297,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["timestamp",{"_index":350,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["token",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["touch",{"_index":548,"title":{},"body":{"index.html":{}}}],["transform",{"_index":415,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["transform(value",{"_index":416,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["transformer",{"_index":422,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{},"dependencies.html":{}}}],["transport",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["transport.grpc",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["twitter",{"_index":554,"title":{},"body":{"index.html":{}}}],["type",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"controllers/BinanceController.html":{},"classes/BinanceGateway.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/GetSpreadResponceDto.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/LoginRequest.html":{},"classes/LoginRequestDto.html":{},"interfaces/LoginResponse.html":{},"classes/LoginResponseDto.html":{},"interfaces/RegisterRequest.html":{},"classes/RegisterRequestDto.html":{},"interfaces/RegisterResponse.html":{},"classes/RegisterResponseDto.html":{},"interfaces/RequestWithUser.html":{},"interfaces/SetSpreadRequest.html":{},"classes/SetSpreadRequestDto.html":{},"classes/SetSpreadResponceDto.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":570,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":286,"title":{},"body":{"classes/BinanceGateway.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":526,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":569,"title":{},"body":{"properties.html":{}}}],["unsubscribefeed",{"_index":328,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["unsubscribefeed(request",{"_index":338,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["unsubscribefeedrequest",{"_index":339,"title":{"interfaces/UnsubscribeFeedRequest.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["unsubscribefeedresponse",{"_index":351,"title":{"interfaces/UnsubscribeFeedResponse.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["unused",{"_index":288,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["url",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/BinanceModule.html":{}}}],["useguards",{"_index":214,"title":{},"body":{"controllers/BinanceController.html":{}}}],["useguards(authguard",{"_index":232,"title":{},"body":{"controllers/BinanceController.html":{}}}],["user",{"_index":395,"title":{},"body":{"interfaces/RequestWithUser.html":{}}}],["userid",{"_index":184,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"classes/BinanceGateway.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["valid",{"_index":371,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{}}}],["validate",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["validate(obj",{"_index":430,"title":{},"body":{"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{}}}],["validate(request",{"_index":171,"title":{},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{}}}],["validate(token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":172,"title":{"interfaces/ValidateRequest.html":{}},"body":{"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"coverage.html":{}}}],["validateresponse",{"_index":115,"title":{"interfaces/ValidateResponse.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthServiceClient.html":{},"interfaces/AuthServiceController.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/RegisterRequest.html":{},"interfaces/RegisterResponse.html":{},"interfaces/ValidateRequest.html":{},"interfaces/ValidateResponse.html":{},"guards/WsAuthGuard.html":{},"coverage.html":{}}}],["validationexception",{"_index":402,"title":{"classes/ValidationException.html":{}},"body":{"classes/ValidationException.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationexception(messages",{"_index":435,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":413,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":380,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/RegisterRequestDto.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":251,"title":{},"body":{"classes/BinanceGateway.html":{},"injectables/ValidationPipe.html":{},"injectables/WsValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":574,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":289,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["version",{"_index":567,"title":{},"body":{"properties.html":{}}}],["void",{"_index":262,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["watch",{"_index":521,"title":{},"body":{"index.html":{}}}],["website",{"_index":552,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":272,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["websocketgateway(5001",{"_index":278,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["websocketserver",{"_index":258,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["wsauthguard",{"_index":436,"title":{"guards/WsAuthGuard.html":{}},"body":{"guards/WsAuthGuard.html":{},"coverage.html":{}}}],["wsexception",{"_index":440,"title":{},"body":{"guards/WsAuthGuard.html":{},"injectables/WsValidationPipe.html":{}}}],["wsexception('unauthorized",{"_index":443,"title":{},"body":{"guards/WsAuthGuard.html":{}}}],["wsexception(messages",{"_index":447,"title":{},"body":{"injectables/WsValidationPipe.html":{}}}],["wss",{"_index":245,"title":{},"body":{"classes/BinanceGateway.html":{}}}],["wsvalidationpipe",{"_index":444,"title":{"injectables/WsValidationPipe.html":{}},"body":{"injectables/WsValidationPipe.html":{},"coverage.html":{}}}],["you'd",{"_index":542,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBinanceModule\n\nBinanceModule\n\nAppModule -->\n\nBinanceModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BinanceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { BinanceModule } from './binance/binance.module';\n\n@Module({\n    imports: [AuthModule, BinanceModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body: LoginRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'LOGIN'})@ApiResponse({type: LoginResponseDto})@Put('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                LoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: RegisterRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'REGISTER'})@ApiResponse({type: RegisterResponseDto})@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                RegisterRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Inject, Post, Put } from '@nestjs/common';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Observable } from 'rxjs';\nimport { AuthServiceClient, AUTH_SERVICE_NAME } from './auth.pb';\nimport { LoginRequestDto } from './dto/loginRequest.dto';\nimport { LoginResponseDto } from './dto/loginResponse.dto';\nimport { RegisterRequestDto } from './dto/registerRequest.dto';\nimport { RegisterResponseDto } from './dto/registerResponse.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n    private svc: AuthServiceClient;\n\n    constructor(\n        @Inject(AUTH_SERVICE_NAME)\n        private readonly client: ClientGrpc,\n    ) {\n        this.svc = this.client.getService(AUTH_SERVICE_NAME);\n    }\n\n    @ApiOperation({ summary: 'REGISTER' })\n    @ApiResponse({ type: RegisterResponseDto })\n    @Post('register')\n    private async register(@Body() body: RegisterRequestDto): Promise> {\n        return this.svc.register(body);\n    }\n\n    @ApiOperation({ summary: 'LOGIN' })\n    @ApiResponse({ type: LoginResponseDto })\n    @Put('login')\n    private async login(@Body() body: LoginRequestDto): Promise> {\n        return this.svc.login(body);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guard/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guard/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(ctx: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, HttpStatus, UnauthorizedException, Inject } from '@nestjs/common';\nimport { RequestWithUser } from '../interface/reqWithUser.interface';\nimport { ValidateResponse } from '../../auth/auth.pb';\nimport { AuthService } from '../../auth/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(\n        @Inject(AuthService)\n        public readonly service: AuthService,\n    ) {}\n\n    public async canActivate(ctx: ExecutionContext): Promise | never {\n        const req: RequestWithUser = ctx.switchToHttp().getRequest();\n        const authorization: string = req.headers['authorization'];\n\n        if (!authorization) {\n            throw new UnauthorizedException();\n        }\n\n        const bearer: string[] = authorization.split(' ');\n\n        if (!bearer || bearer.length \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { AuthController } from './auth.controller';\nimport { AUTH_SERVICE_NAME, AUTH_PACKAGE_NAME } from './auth.pb';\nimport { AuthService } from './auth.service';\n\n@Global()\n@Module({\n    imports: [\n        ClientsModule.register([\n            {\n                name: AUTH_SERVICE_NAME,\n                transport: Transport.GRPC,\n                options: {\n                    url: '0.0.0.0:50051',\n                    package: AUTH_PACKAGE_NAME,\n                    protoPath: '../proto/auth.proto',\n                },\n            },\n        ]),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService],\n    exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                svc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientGrpc)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientGrpc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        svc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthServiceClient\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { firstValueFrom } from 'rxjs';\nimport { AuthServiceClient, AUTH_SERVICE_NAME, ValidateResponse } from './auth.pb';\n\n@Injectable()\nexport class AuthService {\n    private svc: AuthServiceClient;\n\n    constructor(\n        @Inject(AUTH_SERVICE_NAME)\n        private readonly client: ClientGrpc,\n    ) {\n        this.svc = this.client.getService(AUTH_SERVICE_NAME);\n    }\n\n    public async validate(token: string): Promise {\n        return firstValueFrom(this.svc.validate({ token }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthServiceClient.html":{"url":"interfaces/AuthServiceClient.html","title":"interface - AuthServiceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthServiceClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        register\n                                    \n                                \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(request: LoginRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                LoginRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(request: RegisterRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RegisterRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(request: ValidateRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ValidateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthServiceController.html":{"url":"interfaces/AuthServiceController.html","title":"interface - AuthServiceController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        register\n                                    \n                                \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(request: LoginRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                LoginRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | LoginResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(request: RegisterRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RegisterRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | RegisterResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(request: ValidateRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.pb.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ValidateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | ValidateResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BinanceController.html":{"url":"controllers/BinanceController.html","title":"controller - BinanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BinanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                binance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getSpread\n                            \n                            \n                                    Private\n                                    Async\n                                setSpread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpread()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'GET SPREAD'})@ApiResponse({type: GetSpreadResponceDto})@ApiSecurity('Authorization', ['Authorization'])@Get('spread')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        setSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSpread(body: SetSpreadRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'SET SPREAD'})@ApiResponse({type: SetSpreadResponceDto})@ApiSecurity('Authorization', ['Authorization'])@Post('spread')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SetSpreadRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Inject, Post, UseGuards, Body, Get } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiSecurity, ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport { AuthGuard } from '../common/guard/auth.guard';\nimport { SetSpreadRequestDto } from './dto/setSpreadRequest.dto';\nimport { SetSpreadResponceDto } from './dto/setSpreadResponce.dto';\nimport { GetSpreadResponceDto } from './dto/getSpreadResponce.dto';\nimport { BinanceServiceClient, BINANCE_SERVICE_NAME } from './binance.pb';\n\n@ApiTags('Binance')\n@Controller('binance')\nexport class BinanceController {\n    private svc: BinanceServiceClient;\n\n    constructor(\n        @Inject(BINANCE_SERVICE_NAME)\n        private readonly client: ClientGrpc,\n    ) {\n        this.svc = this.client.getService(BINANCE_SERVICE_NAME);\n    }\n\n    @ApiOperation({ summary: 'GET SPREAD' })\n    @ApiResponse({ type: GetSpreadResponceDto })\n    @ApiSecurity('Authorization', ['Authorization'])\n    @Get('spread')\n    @UseGuards(AuthGuard)\n    private async getSpread(): Promise> {\n        return this.svc.getSpread({});\n    }\n\n    @ApiOperation({ summary: 'SET SPREAD' })\n    @ApiResponse({ type: SetSpreadResponceDto })\n    @ApiSecurity('Authorization', ['Authorization'])\n    @Post('spread')\n    @UseGuards(AuthGuard)\n    private async setSpread(@Body() body: SetSpreadRequestDto): Promise> {\n        return this.svc.setSpread(body);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BinanceGateway.html":{"url":"classes/BinanceGateway.html","title":"class - BinanceGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BinanceGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayInit\n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connections\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                svc\n                            \n                            \n                                    Private\n                                wss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterInit\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientGrpc)\n                    \n                \n                        \n                            \n                                Defined in src/binance/binance.gateway.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientGrpc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.gateway.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('AppGateway')\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.gateway.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        svc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BinanceServiceClient\n\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.gateway.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wss\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.gateway.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterInit\n                        \n                    \n                \n            \n            \n                \nafterInit(_server: Server)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.gateway.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.gateway.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { event: string; data: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.gateway.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Logger } from '@nestjs/common';\nimport { Socket, Server } from 'socket.io';\nimport {\n    OnGatewayConnection,\n    OnGatewayDisconnect,\n    OnGatewayInit,\n    WebSocketGateway,\n    WebSocketServer,\n} from '@nestjs/websockets';\nimport { BinanceServiceClient, BINANCE_SERVICE_NAME, SubscribeFeedResponse } from './binance.pb';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\ntype connectionData = {\n    marketFeed?: Observable;\n    userId: string;\n    market: string;\n};\n\n@WebSocketGateway(5001, {\n    namespace: 'binance',\n    cors: {\n        origin: '*',\n    },\n})\nexport class BinanceGateway implements OnGatewayInit, OnGatewayConnection, OnGatewayDisconnect {\n    private svc: BinanceServiceClient;\n    private logger: Logger = new Logger('AppGateway');\n    private connections = new Map();\n    @WebSocketServer() private wss: Server;\n\n    constructor(\n        @Inject(BINANCE_SERVICE_NAME)\n        private readonly client: ClientGrpc,\n    ) {\n        this.svc = this.client.getService(BINANCE_SERVICE_NAME);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    afterInit(_server: Server) {\n        this.logger.log('Initialized .....');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    handleConnection(client: Socket, ...args: any[]) {\n        this.logger.log(`Client connected: ${client.id}`);\n\n        const connection: connectionData = {\n            userId: client.data['user'],\n            market: null,\n        };\n\n        const ticker = client.handshake.query.ticker;\n\n        if (ticker != 'BTCUSDT') {\n            return { event: 'feed', data: 'Only BTCUSDT supported.' };\n        }\n\n        connection.market = ticker;\n\n        this.connections.set(client.id, { userId: client.data['user'], market: null });\n\n        // can be implemented multiple assets feeds\n        const marketFeed: Observable = this.svc.subscribeFeed({\n            market: ticker,\n            clientId: client.id,\n        });\n\n        marketFeed.subscribe({\n            next: (feedItem) => {\n                //this.logger.log('feedItem for ' + client.id);\n                client.emit('feed', feedItem);\n            },\n        });\n    }\n\n    handleDisconnect(client: Socket) {\n        this.svc.unsubscribeFeed({ clientId: client.id }).subscribe({\n            next: (res) => {\n                this.logger.log(res.result ? `Client ${client.id} disconnected` : res);\n            },\n        });\n        this.connections.delete(client.id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BinanceModule.html":{"url":"modules/BinanceModule.html","title":"module - BinanceModule","body":"\n                   \n\n\n\n\n    Modules\n    BinanceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/binance/binance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            BinanceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { BinanceController } from './binance.controller';\nimport { BinanceGateway } from './binance.gateway';\nimport { BINANCE_PACKAGE_NAME, BINANCE_SERVICE_NAME } from './binance.pb';\n\n@Module({\n    imports: [\n        ClientsModule.register([\n            {\n                name: BINANCE_SERVICE_NAME,\n                transport: Transport.GRPC,\n                options: {\n                    url: '0.0.0.0:50052',\n                    package: BINANCE_PACKAGE_NAME,\n                    protoPath: '../proto/binance.proto',\n                },\n            },\n        ]),\n    ],\n    controllers: [BinanceController],\n    providers: [BinanceGateway],\n})\nexport class BinanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BinanceServiceClient.html":{"url":"interfaces/BinanceServiceClient.html","title":"interface - BinanceServiceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BinanceServiceClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getSpread\n                                    \n                                \n                                \n                                    \n                                        setSpread\n                                    \n                                \n                                \n                                    \n                                        subscribeFeed\n                                    \n                                \n                                \n                                    \n                                        unsubscribeFeed\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpread\n                        \n                    \n                \n            \n            \n                \ngetSpread(request: Empty)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Empty\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpread\n                        \n                    \n                \n            \n            \n                \nsetSpread(request: SetSpreadRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeFeed\n                        \n                    \n                \n            \n            \n                \nsubscribeFeed(request: SubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeFeed\n                        \n                    \n                \n            \n            \n                \nunsubscribeFeed(request: UnsubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BinanceServiceController.html":{"url":"interfaces/BinanceServiceController.html","title":"interface - BinanceServiceController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BinanceServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getSpread\n                                    \n                                \n                                \n                                    \n                                        setSpread\n                                    \n                                \n                                \n                                    \n                                        subscribeFeed\n                                    \n                                \n                                \n                                    \n                                        unsubscribeFeed\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpread\n                        \n                    \n                \n            \n            \n                \ngetSpread(request: Empty)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Empty\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | GetSpreadResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpread\n                        \n                    \n                \n            \n            \n                \nsetSpread(request: SetSpreadRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | SetSpreadResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeFeed\n                        \n                    \n                \n            \n            \n                \nsubscribeFeed(request: SubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeFeed\n                        \n                    \n                \n            \n            \n                \nunsubscribeFeed(request: UnsubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | UnsubscribeFeedResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Empty.html":{"url":"interfaces/Empty.html","title":"interface - Empty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Empty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSpreadResponceDto.html":{"url":"classes/GetSpreadResponceDto.html","title":"class - GetSpreadResponceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSpreadResponceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/dto/getSpreadResponce.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            GetSpreadResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                spread\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/getSpreadResponce.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/getSpreadResponce.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/getSpreadResponce.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { GetSpreadResponse } from '../binance.pb';\n\nexport class GetSpreadResponceDto implements GetSpreadResponse {\n    @ApiProperty()\n    status: number;\n\n    @ApiProperty()\n    error: string[];\n\n    @ApiProperty()\n    spread: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetSpreadResponse.html":{"url":"interfaces/GetSpreadResponse.html","title":"interface - GetSpreadResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetSpreadResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRequestDto.html":{"url":"classes/LoginRequestDto.html","title":"class - LoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/loginRequest.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoginRequest\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail({}, {message: 'must be a valid email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/loginRequest.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MinLength(8, {message: 'must be 8 or more symbols'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/loginRequest.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, MinLength } from 'class-validator';\nimport { LoginRequest } from '../auth.pb';\n\nexport class LoginRequestDto implements LoginRequest {\n    @ApiProperty()\n    @IsEmail({}, { message: 'must be a valid email' })\n    email: string;\n\n    @ApiProperty()\n    @MinLength(8, { message: 'must be 8 or more symbols' })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/loginResponse.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoginResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                status\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/loginResponse.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/loginResponse.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/loginResponse.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoginResponse } from '../auth.pb';\n\nexport class LoginResponseDto implements LoginResponse {\n    @ApiProperty()\n    status: number;\n\n    @ApiProperty()\n    error: string[];\n\n    @ApiProperty()\n    token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequest.html":{"url":"interfaces/RegisterRequest.html","title":"interface - RegisterRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterRequestDto.html":{"url":"classes/RegisterRequestDto.html","title":"class - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/registerRequest.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RegisterRequest\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail({}, {message: 'must be a valid email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/registerRequest.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MinLength(8, {message: 'must be 8 or more symbols'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/registerRequest.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, MinLength } from 'class-validator';\nimport { RegisterRequest } from '../auth.pb';\n\nexport class RegisterRequestDto implements RegisterRequest {\n    @ApiProperty()\n    @IsEmail({}, { message: 'must be a valid email' })\n    email: string;\n\n    @ApiProperty()\n    @MinLength(8, { message: 'must be 8 or more symbols' })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterResponse.html":{"url":"interfaces/RegisterResponse.html","title":"interface - RegisterResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterResponseDto.html":{"url":"classes/RegisterResponseDto.html","title":"class - RegisterResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/registerResponse.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RegisterResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/registerResponse.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/registerResponse.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { RegisterResponse } from '../auth.pb';\n\nexport class RegisterResponseDto implements RegisterResponse {\n    @ApiProperty()\n    status: number;\n\n    @ApiProperty()\n    error: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestWithUser.html":{"url":"interfaces/RequestWithUser.html","title":"interface - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interface/reqWithUser.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    FastifyRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FastifyRequest } from 'fastify';\n\nexport interface RequestWithUser extends FastifyRequest {\n    user: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetSpreadRequest.html":{"url":"interfaces/SetSpreadRequest.html","title":"interface - SetSpreadRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetSpreadRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            spread\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSpreadRequestDto.html":{"url":"classes/SetSpreadRequestDto.html","title":"class - SetSpreadRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSpreadRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/dto/setSpreadRequest.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SetSpreadRequest\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                spread\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        spread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/setSpreadRequest.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { SetSpreadRequest } from '../binance.pb';\n\nexport class SetSpreadRequestDto implements SetSpreadRequest {\n    @ApiProperty()\n    spread: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSpreadResponceDto.html":{"url":"classes/SetSpreadResponceDto.html","title":"class - SetSpreadResponceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSpreadResponceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/dto/setSpreadResponce.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SetSpreadResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/setSpreadResponce.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/dto/setSpreadResponce.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { SetSpreadResponse } from '../binance.pb';\n\nexport class SetSpreadResponceDto implements SetSpreadResponse {\n    @ApiProperty()\n    status: number;\n\n    @ApiProperty()\n    error: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetSpreadResponse.html":{"url":"interfaces/SetSpreadResponse.html","title":"interface - SetSpreadResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetSpreadResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscribeFeedRequest.html":{"url":"interfaces/SubscribeFeedRequest.html","title":"interface - SubscribeFeedRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscribeFeedRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientId\n                                        \n                                \n                                \n                                        \n                                            market\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        market\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        market:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscribeFeedResponse.html":{"url":"interfaces/SubscribeFeedResponse.html","title":"interface - SubscribeFeedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscribeFeedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ask\n                                        \n                                \n                                \n                                        \n                                            askVolume\n                                        \n                                \n                                \n                                        \n                                            bid\n                                        \n                                \n                                \n                                        \n                                            bidVolume\n                                        \n                                \n                                \n                                        \n                                            realAsk\n                                        \n                                \n                                \n                                        \n                                            realBid\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ask:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        askVolume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        askVolume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bidVolume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bidVolume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        realAsk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        realAsk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        realBid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        realBid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnsubscribeFeedRequest.html":{"url":"interfaces/UnsubscribeFeedRequest.html","title":"interface - UnsubscribeFeedRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnsubscribeFeedRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnsubscribeFeedResponse.html":{"url":"interfaces/UnsubscribeFeedResponse.html","title":"interface - UnsubscribeFeedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnsubscribeFeedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidateRequest.html":{"url":"interfaces/ValidateRequest.html","title":"interface - ValidateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidateResponse.html":{"url":"interfaces/ValidateResponse.html","title":"interface - ValidateResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'auth';\n\nexport interface RegisterRequest {\n    email: string;\n    password: string;\n}\n\nexport interface RegisterResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface LoginRequest {\n    email: string;\n    password: string;\n}\n\nexport interface LoginResponse {\n    status: number;\n    error: string[];\n    token: string;\n}\n\nexport interface ValidateRequest {\n    token: string;\n}\n\nexport interface ValidateResponse {\n    status: number;\n    error: string[];\n    userId: string;\n}\n\nexport const AUTH_PACKAGE_NAME = 'auth';\n\nexport interface AuthServiceClient {\n    register(request: RegisterRequest): Observable;\n\n    login(request: LoginRequest): Observable;\n\n    validate(request: ValidateRequest): Observable;\n}\n\nexport interface AuthServiceController {\n    register(request: RegisterRequest): Promise | Observable | RegisterResponse;\n\n    login(request: LoginRequest): Promise | Observable | LoginResponse;\n\n    validate(request: ValidateRequest): Promise | Observable | ValidateResponse;\n}\n\nexport function AuthServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['register', 'login', 'validate'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('AuthService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const AUTH_SERVICE_NAME = 'AuthService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception/validation.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(responce: string | Record)\n                    \n                \n                        \n                            \n                                Defined in src/common/exception/validation.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responce\n                                                  \n                                                        \n                                                                    string | Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exception/validation.exception.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ValidationException extends HttpException {\n    messages: any;\n    constructor(responce: string | Record) {\n        super(responce, HttpStatus.BAD_REQUEST);\n        this.messages = responce;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { ValidationException } from '../exception/validation.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value: any, metadata: ArgumentMetadata): Promise {\n        if (metadata.type === 'custom') return value;\n\n        const obj = plainToClass(metadata.metatype, value);\n        const errors = await validate(obj);\n\n        if (errors.length) {\n            const messages = errors.map((err) => {\n                return `${err.property} - ${Object.values(err.constraints).join(', ')}`;\n            });\n            throw new ValidationException(messages);\n        }\n\n        return obj;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/WsAuthGuard.html":{"url":"guards/WsAuthGuard.html","title":"guard - WsAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    WsAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guard/wsauth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guard/wsauth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(ctx: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guard/wsauth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, HttpStatus, Inject } from '@nestjs/common';\nimport { ValidateResponse } from '../../auth/auth.pb';\nimport { AuthService } from '../../auth/auth.service';\nimport { Socket } from 'socket.io';\nimport { WsException } from '@nestjs/websockets';\n\n@Injectable()\nexport class WsAuthGuard implements CanActivate {\n    constructor(\n        @Inject(AuthService)\n        public readonly service: AuthService,\n    ) {}\n\n    public async canActivate(ctx: ExecutionContext): Promise | never {\n        const client: Socket = ctx.switchToWs().getClient();\n        const authorization: any = client.handshake.headers['authorization'];\n\n        if (!authorization) {\n            throw new WsException('Unauthorized.');\n        }\n\n        const bearer: string[] = authorization.split(' ');\n\n        if (!bearer || bearer.length \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WsValidationPipe.html":{"url":"injectables/WsValidationPipe.html","title":"injectable - WsValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WsValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/wsvalidation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/wsvalidation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { WsException } from '@nestjs/websockets';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class WsValidationPipe implements PipeTransform {\n    async transform(value: any, metadata: ArgumentMetadata): Promise {\n        if (metadata.type === 'custom') return value;\n\n        const obj = plainToClass(metadata.metatype, value);\n        const errors = await validate(obj);\n\n        if (errors.length) {\n            const messages = errors.map((err) => {\n                return `${err.property} - ${Object.values(err.constraints).join(', ')}`;\n            });\n            throw new WsException(messages);\n        }\n\n        return obj;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            AuthServiceClient\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            AuthServiceController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            LoginRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            RegisterRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            RegisterResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            ValidateRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            interface\n            ValidateResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            function\n            AuthServiceControllerMethods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            variable\n            AUTH_PACKAGE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            variable\n            AUTH_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.pb.ts\n            \n            variable\n            protobufPackage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/loginRequest.dto.ts\n            \n            class\n            LoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/loginResponse.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/registerRequest.dto.ts\n            \n            class\n            RegisterRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/registerResponse.dto.ts\n            \n            class\n            RegisterResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.controller.ts\n            \n            controller\n            BinanceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.gateway.ts\n            \n            class\n            BinanceGateway\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            BinanceServiceClient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            BinanceServiceController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            GetSpreadResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SetSpreadRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SetSpreadResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SubscribeFeedRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SubscribeFeedResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            UnsubscribeFeedRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            UnsubscribeFeedResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            function\n            BinanceServiceControllerMethods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            BINANCE_PACKAGE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            BINANCE_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            protobufPackage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/dto/getSpreadResponce.dto.ts\n            \n            class\n            GetSpreadResponceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/binance/dto/setSpreadRequest.dto.ts\n            \n            class\n            SetSpreadRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/binance/dto/setSpreadResponce.dto.ts\n            \n            class\n            SetSpreadResponceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/exception/validation.exception.ts\n            \n            class\n            ValidationException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/guard/wsauth.guard.ts\n            \n            guard\n            WsAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interface/reqWithUser.interface.ts\n            \n            interface\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/pipe/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/pipe/wsvalidation.pipe.ts\n            \n            injectable\n            WsValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/cors : ^8.1.0\n        \n            @fastify/helmet : ^9.1.0\n        \n            @fastify/static : ^6.5.0\n        \n            @grpc/grpc-js : ^1.6.8\n        \n            @grpc/proto-loader : ^0.7.0\n        \n            @nestjs/common : ^9.0.8\n        \n            @nestjs/core : ^9.0.8\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^9.0.8\n        \n            @nestjs/platform-fastify : ^9.0.8\n        \n            @nestjs/platform-socket.io : ^9.0.9\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/websockets : ^9.0.9\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            nestjs-pg-pubsub : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceControllerMethods   (src/.../auth.pb.ts)\n                        \n                        \n                            BinanceServiceControllerMethods   (src/.../binance.pb.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceControllerMethods\n                        \n                    \n                \n            \n            \n                \nAuthServiceControllerMethods()\n                \n            \n\n\n\n\n        \n    \n    src/binance/binance.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BinanceServiceControllerMethods\n                        \n                    \n                \n            \n            \n                \nBinanceServiceControllerMethods()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BinanceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBinanceModule\n\nBinanceModule\n\nAppModule -->\n\nBinanceModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            connectionData   (src/.../binance.gateway.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/binance/binance.gateway.ts\n    \n    \n        \n            \n                \n                    \n                    connectionData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_PACKAGE_NAME   (src/.../auth.pb.ts)\n                        \n                        \n                            AUTH_SERVICE_NAME   (src/.../auth.pb.ts)\n                        \n                        \n                            BINANCE_PACKAGE_NAME   (src/.../binance.pb.ts)\n                        \n                        \n                            BINANCE_SERVICE_NAME   (src/.../binance.pb.ts)\n                        \n                        \n                            protobufPackage   (src/.../auth.pb.ts)\n                        \n                        \n                            protobufPackage   (src/.../binance.pb.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_PACKAGE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AuthService'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        protobufPackage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n\n    src/binance/binance.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BINANCE_PACKAGE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'binance'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BINANCE_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BinanceService'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        protobufPackage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'binance'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
