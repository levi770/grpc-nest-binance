var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.744,1,1.744]],["body/modules/AppModule.html",[0,2.657,1,3.263,2,1.829,3,2.339,4,2.809,5,2.809,6,2.872,7,0.044,8,3.056,9,2.391,10,2.391,11,0.543,12,0.465,13,0.465,14,3.443,15,3.591,16,0.833,17,1.829,18,3.443,19,2.809,20,2.809,21,2.079,22,3.443,23,0.595,24,3.443,25,3.443,26,3.443,27,3.443,28,3.443,29,3.443,30,3.443,31,3.443,32,3.443,33,3.443,34,3.443,35,3.443,36,3.443,37,3.443,38,3.443,39,3.443,40,3.443,41,3.369,42,3.443,43,3.443,44,0.543,45,1.151,46,0.033,47,0.033]],["title/controllers/BinanceController.html",[48,1.744,49,1.744]],["body/controllers/BinanceController.html",[7,0.045,11,0.414,12,0.355,13,0.355,16,0.761,17,1.395,44,0.414,45,0.877,46,0.028,47,0.028,48,1.585,49,2.216,50,2.141,51,2.141,52,2.625,53,0.477,54,0.414,55,2.216,56,4.482,57,4.482,58,1.176,59,1.078,60,1.216,61,1.216,62,3.739,63,5.234,64,2.435,65,2.625,66,2.767,67,1.231,68,2.994,69,0.833,70,2.625,71,2.555,72,2.249,73,0.769,74,2.555,75,2.141,76,0.974,77,0.833,78,2.625,79,0.864,80,0.974,81,0.833,82,2.625,83,0.697,84,0.618,85,0.697,86,0.545,87,0.545,88,0.477,89,0.477,90,0.545,91,0.477,92,2.141,93,0.418,94,2.141,95,2.625,96,2.625,97,2.141,98,2.625,99,1.078,100,2.625,101,2.625,102,2.625,103,2.625]],["title/modules/BinanceModule.html",[0,1.744,6,1.535]],["body/modules/BinanceModule.html",[0,2.759,2,1.941,3,2.428,6,2.916,7,0.044,8,3.173,9,2.537,10,2.537,11,0.576,12,0.494,13,0.494,15,2.98,16,0.848,17,1.941,20,2.98,21,2.205,23,0.494,44,0.576,45,1.221,46,0.035,47,0.035,49,3.011,50,3.727,93,0.625,94,2.98,104,2.98,105,2.98,106,3.653,107,4.569,108,3.653,109,2.98,110,3.653]],["title/injectables/BinanceService.html",[93,0.329,111,1.744]],["body/injectables/BinanceService.html",[7,0.045,11,0.239,12,0.205,13,0.205,16,0.639,17,0.805,21,0.914,23,0.548,41,1.685,44,0.239,45,0.506,46,0.018,47,0.018,53,0.441,54,0.239,55,1.465,56,4.184,57,4.14,58,0.817,59,0.571,64,2.542,66,2.294,67,0.954,68,1.979,69,0.631,71,2.096,72,2.154,73,0.737,74,2.096,75,1.979,77,0.631,79,0.571,81,0.631,86,0.314,88,0.275,89,0.275,91,0.275,92,1.235,93,0.276,97,3.473,99,1.002,109,1.235,111,1.465,112,1.514,113,1.235,114,0.644,115,3.036,116,3.036,117,3.036,118,3.036,119,3.036,120,4.871,121,4.054,122,2.426,123,2.426,124,0.644,125,1.514,126,2.426,127,2.426,128,1.514,129,1.514,130,1.514,131,2.426,132,1.514,133,1.514,134,2.426,135,1.514,136,3.472,137,1.514,138,0.356,139,2.832,140,2.832,141,1.685,142,3.307,143,3.472,144,1.514,145,1.514,146,1.514,147,3.036,148,1.514,149,1.514,150,1.514,151,3.036,152,1.514,153,1.514,154,1.514,155,1.514,156,1.514,157,1.514,158,1.514,159,1.174,160,3.036,161,3.472,162,1.514,163,4.054,164,3.472,165,2.426,166,3.036,167,1.514,168,2.426,169,1.514,170,3.036,171,3.799,172,1.514,173,0.402,174,1.514,175,0.402,176,2.426,177,0.402,178,2.426,179,0.402,180,1.979,181,1.979,182,2.426,183,0.402,184,1.514,185,0.402,186,0.402,187,1.514,188,0.402,189,1.514,190,1.514,191,1.514,192,1.514,193,1.514,194,1.514,195,3.036,196,1.514,197,1.514,198,1.514,199,1.514,200,1.514,201,1.514,202,1.514,203,0.644,204,1.211,205,3.472,206,3.036,207,1.514,208,3.036,209,2.426,210,2.426,211,2.426,212,2.426,213,2.426,214,2.426,215,1.465,216,2.426,217,2.426,218,2.426,219,2.426,220,2.426,221,1.979,222,1.514,223,0.921,224,2.426,225,1.514,226,1.514]],["title/interfaces/BinanceServiceClient.html",[227,0.115,228,0.68]],["body/interfaces/BinanceServiceClient.html",[7,0.045,11,0.34,12,0.291,13,0.291,16,0.502,23,0.512,44,0.851,46,0.024,47,0.024,53,0.578,54,0.34,55,1.922,58,0.891,59,0.984,60,1.005,61,1.11,64,2.223,66,2.525,67,0.891,69,0.811,71,2.525,72,2.223,73,0.76,74,2.525,76,1.005,77,0.811,79,1.099,80,0.845,81,0.811,83,0.571,84,0.507,85,1.419,86,0.447,87,0.447,88,0.578,89,0.578,90,0.447,91,0.578,93,0.245,99,0.507,124,0.571,138,1.245,159,1.345,173,0.571,175,0.571,177,0.571,179,0.571,183,0.571,185,0.571,186,0.571,188,0.571,203,0.571,204,1.005,223,0.845,227,0.205,228,0.749,229,0.571,230,0.447,231,1.129,232,1.05,233,2.153,234,0.949,235,2.153,236,2.153,237,2.153,238,0.642,239,0.507,240,1.192,241,0.642,242,0.949,243,0.642,244,0.507,245,0.507,246,1.005,247,0.507,248,0.949,249,1.393,250,1.247,251,0.949,252,0.642,253,0.949,254,0.949,255,0.642]],["title/interfaces/BinanceServiceController.html",[227,0.115,245,0.68]],["body/interfaces/BinanceServiceController.html",[7,0.045,11,0.332,12,0.285,13,0.285,16,0.494,23,0.505,44,0.847,46,0.024,47,0.024,53,0.569,54,0.332,55,1.89,58,0.879,59,0.973,60,0.992,61,1.098,64,2.198,66,2.498,67,1.09,69,0.804,71,2.498,72,2.198,73,0.752,74,2.498,76,0.992,77,0.804,79,1.09,80,0.831,81,0.804,83,0.559,84,0.495,85,1.412,86,0.437,87,0.437,88,0.679,89,0.679,90,0.437,91,0.679,93,0.24,99,0.495,124,0.559,138,1.239,159,1.337,173,0.559,175,0.559,177,0.559,179,0.559,183,0.559,185,0.559,186,0.559,188,0.559,203,0.559,204,0.992,223,0.831,227,0.203,228,0.495,229,0.559,230,0.437,231,1.114,232,1.04,234,0.933,238,0.628,239,0.495,240,1.185,241,0.628,242,0.933,243,0.628,244,0.495,245,0.736,246,0.992,247,0.495,248,0.933,249,1.382,250,1.234,251,0.933,252,0.628,253,0.933,254,0.933,255,0.628,256,2.105,257,2.105,258,2.105,259,2.105]],["title/interfaces/Empty.html",[227,0.115,232,0.68]],["body/interfaces/Empty.html",[7,0.045,11,0.389,12,0.333,13,0.333,16,0.554,23,0.553,44,0.87,46,0.027,47,0.027,53,0.638,58,0.58,59,0.826,60,0.654,61,0.932,67,0.962,69,0.743,76,0.932,77,0.743,79,0.826,80,0.654,81,0.743,83,0.654,84,0.58,85,1.391,86,0.512,87,0.512,88,0.638,89,0.638,90,0.512,91,0.638,93,0.281,99,0.58,124,0.654,138,1.278,159,1.391,173,0.654,175,0.654,177,0.654,179,0.654,183,0.654,185,0.654,186,0.654,188,0.654,203,0.654,204,1.085,223,0.932,227,0.211,228,0.58,229,0.654,230,0.512,231,1.047,232,1.049,234,0.735,238,0.735,239,0.58,240,1.233,241,0.735,242,1.047,243,0.735,244,0.58,245,0.58,246,1.085,247,0.58,248,1.047,249,1.46,250,1.329,251,1.047,252,0.735,253,1.047,254,1.047,255,0.735]],["title/interfaces/GetSpreadResponse.html",[88,0.525,227,0.115]],["body/interfaces/GetSpreadResponse.html",[7,0.045,11,0.37,12,0.317,13,0.317,16,0.534,23,0.651,44,0.863,46,0.026,47,0.026,53,0.615,54,0.37,58,0.551,59,0.797,60,0.622,61,0.899,67,0.935,69,0.723,73,0.723,76,0.899,77,0.723,79,0.797,80,0.622,81,0.723,83,0.622,84,0.551,85,1.374,86,0.486,87,0.486,88,0.723,89,0.615,90,0.486,91,0.615,93,0.267,99,0.551,114,0.899,124,0.622,138,1.304,159,1.374,173,0.622,175,0.622,177,0.622,179,0.622,183,0.622,185,0.622,186,0.622,188,0.622,203,0.622,204,1.277,223,1.226,227,0.209,228,0.551,229,0.622,230,0.486,231,1.01,232,0.935,234,0.699,238,0.699,239,0.551,240,1.253,241,0.699,242,1.01,243,0.699,244,0.551,245,0.551,246,1.055,247,0.551,248,1.01,249,1.435,250,1.298,251,1.01,252,0.699,253,1.01,254,1.01,255,0.699]],["title/interfaces/SetSpreadRequest.html",[69,0.525,227,0.115]],["body/interfaces/SetSpreadRequest.html",[7,0.045,11,0.381,12,0.326,13,0.326,16,0.545,23,0.657,44,0.867,46,0.026,47,0.026,53,0.629,54,0.381,58,0.568,59,0.814,60,0.64,61,0.918,67,0.951,69,0.802,73,0.439,76,0.918,77,0.735,79,0.814,80,0.64,81,0.735,83,0.64,84,0.568,85,1.384,86,0.501,87,0.501,88,0.629,89,0.629,90,0.501,91,0.629,93,0.275,99,0.568,114,0.918,124,0.64,138,1.294,159,1.384,173,0.64,175,0.64,177,0.64,179,0.64,183,0.64,185,0.64,186,0.64,188,0.64,203,0.64,204,1.073,223,0.918,227,0.21,228,0.568,229,0.64,230,0.501,231,1.031,232,0.951,234,0.72,238,0.72,239,0.568,240,1.227,241,0.72,242,1.031,243,0.72,244,0.568,245,0.568,246,1.073,247,0.568,248,1.031,249,1.45,250,1.316,251,1.031,252,0.72,253,1.031,254,1.031,255,0.72]],["title/interfaces/SetSpreadResponse.html",[89,0.525,227,0.115]],["body/interfaces/SetSpreadResponse.html",[7,0.045,11,0.375,12,0.321,13,0.321,16,0.54,23,0.542,44,0.865,46,0.026,47,0.026,53,0.622,54,0.375,58,0.56,59,0.805,60,0.631,61,0.908,67,0.943,69,0.729,73,0.622,76,0.908,77,0.729,79,0.805,80,0.631,81,0.729,83,0.631,84,0.56,85,1.379,86,0.494,87,0.494,88,0.622,89,0.729,90,0.494,91,0.622,93,0.271,99,0.56,114,0.908,124,0.631,138,1.291,159,1.379,173,0.631,175,0.631,177,0.631,179,0.631,183,0.631,185,0.631,186,0.631,188,0.631,203,0.631,204,1.284,223,1.233,227,0.209,228,0.56,229,0.631,230,0.494,231,1.02,232,0.943,234,0.709,238,0.709,239,0.56,240,1.256,241,0.709,242,1.02,243,0.709,244,0.56,245,0.56,246,1.064,247,0.56,248,1.02,249,1.442,250,1.307,251,1.02,252,0.709,253,1.02,254,1.02,255,0.709]],["title/classes/Spread.html",[23,0.39,45,0.965]],["body/classes/Spread.html",[7,0.044,11,0.551,12,0.472,13,0.472,16,0.551,23,0.733,41,3.086,44,0.551,45,1.168,46,0.034,47,0.034,54,0.551,62,3.626,64,2.362,72,2.597,73,0.935,114,1.179,138,1.046,141,3.086,215,2.111,221,3.626,240,1.046,260,3.496,261,2.852,262,4.444,263,4.886,264,4.444,265,4.444,266,5.142,267,4.444,268,3.496,269,3.496,270,4.886,271,3.496,272,3.626,273,2.852,274,3.496,275,3.496,276,3.496]],["title/interfaces/SubscribeFeedRequest.html",[77,0.525,227,0.115]],["body/interfaces/SubscribeFeedRequest.html",[7,0.045,11,0.375,12,0.321,13,0.321,16,0.54,23,0.542,44,0.865,46,0.026,47,0.026,53,0.622,54,0.375,58,0.56,59,0.805,60,0.631,61,0.908,67,0.943,69,0.729,73,0.622,76,0.908,77,0.797,79,0.805,80,0.631,81,0.729,83,0.631,84,0.56,85,1.379,86,0.494,87,0.494,88,0.622,89,0.622,90,0.494,91,0.622,93,0.271,99,0.56,114,0.908,124,0.631,138,1.27,159,1.379,173,0.631,175,0.631,177,0.631,179,0.631,183,0.631,185,0.631,186,0.631,188,0.631,203,0.631,204,1.064,223,0.908,227,0.209,228,0.56,229,0.631,230,0.494,231,1.02,232,0.943,234,0.709,238,0.709,239,0.56,240,1.281,241,1.307,242,1.385,243,0.709,244,0.56,245,0.56,246,1.064,247,0.56,248,1.02,249,1.442,250,1.307,251,1.02,252,0.709,253,1.02,254,1.02,255,0.709]],["title/interfaces/SubscribeFeedResponse.html",[90,0.599,227,0.115]],["body/interfaces/SubscribeFeedResponse.html",[7,0.045,11,0.34,12,0.292,13,0.292,16,0.503,23,0.632,44,0.851,46,0.024,47,0.024,53,0.579,54,0.34,58,0.508,59,0.75,60,0.572,61,0.846,67,0.892,69,0.689,73,0.921,76,0.846,77,0.689,79,0.75,80,0.572,81,0.689,83,0.572,84,0.508,85,1.345,86,0.448,87,0.448,88,0.579,89,0.579,90,0.661,91,0.579,93,0.246,99,0.508,114,0.846,124,0.572,138,1.347,159,1.345,173,1.111,175,1.111,177,1.111,179,1.111,183,1.111,185,1.111,186,1.111,188,1.111,203,0.572,204,1.006,223,0.846,227,0.205,228,0.508,229,0.572,230,0.448,231,0.95,232,0.892,234,0.643,238,0.643,239,0.508,240,1.231,241,0.643,242,0.95,243,0.643,244,0.508,245,0.508,246,1.006,247,0.508,248,0.95,249,1.394,250,1.248,251,0.95,252,0.643,253,0.95,254,0.95,255,0.643]],["title/interfaces/UnsubscribeFeedRequest.html",[81,0.525,227,0.115]],["body/interfaces/UnsubscribeFeedRequest.html",[7,0.045,11,0.381,12,0.326,13,0.326,16,0.545,23,0.546,44,0.867,46,0.026,47,0.026,53,0.629,54,0.381,58,0.568,59,0.814,60,0.64,61,0.918,67,0.951,69,0.735,73,0.439,76,0.918,77,0.735,79,0.814,80,0.64,81,0.802,83,0.64,84,0.568,85,1.384,86,0.501,87,0.501,88,0.629,89,0.629,90,0.501,91,0.629,93,0.275,99,0.568,114,0.918,124,0.64,138,1.273,159,1.384,173,0.64,175,0.64,177,0.64,179,0.64,183,0.64,185,0.64,186,0.64,188,0.64,203,0.64,204,1.073,223,0.918,227,0.21,228,0.568,229,0.64,230,0.501,231,1.031,232,0.951,234,0.72,238,0.72,239,0.568,240,1.26,241,0.72,242,1.393,243,0.72,244,0.568,245,0.568,246,1.073,247,0.568,248,1.031,249,1.45,250,1.316,251,1.031,252,0.72,253,1.031,254,1.031,255,0.72]],["title/interfaces/UnsubscribeFeedResponse.html",[91,0.525,227,0.115]],["body/interfaces/UnsubscribeFeedResponse.html",[7,0.045,11,0.375,12,0.321,13,0.321,16,0.54,23,0.542,44,0.865,46,0.026,47,0.026,53,0.622,54,0.375,58,0.56,59,0.805,60,0.631,61,0.908,67,0.943,69,0.729,73,0.622,76,0.908,77,0.729,79,0.805,80,0.631,81,0.729,83,0.631,84,0.56,85,1.379,86,0.494,87,0.494,88,0.622,89,0.622,90,0.494,91,0.729,93,0.271,99,0.56,114,0.908,124,0.631,138,1.27,159,1.379,173,0.631,175,0.631,177,0.631,179,0.631,183,0.631,185,0.631,186,0.631,188,0.631,203,1.163,204,1.284,223,0.908,227,0.209,228,0.56,229,0.631,230,0.494,231,1.02,232,0.943,234,0.709,238,0.709,239,0.56,240,1.256,241,0.709,242,1.02,243,1.195,244,0.56,245,0.56,246,1.064,247,0.56,248,1.02,249,1.442,250,1.307,251,1.02,252,0.709,253,1.02,254,1.02,255,0.709]],["title/coverage.html",[277,2.722]],["body/coverage.html",[7,0.044,13,0.421,23,0.421,45,1.041,46,0.031,47,0.031,48,1.88,49,1.88,51,2.54,69,0.566,73,0.566,77,0.566,81,0.566,87,0.646,88,0.566,89,0.566,90,0.646,91,0.566,93,0.355,111,1.88,113,2.54,141,4.021,142,2.54,227,0.221,228,0.732,230,1.185,232,0.732,239,0.732,244,0.732,245,0.732,246,1.094,247,0.732,261,2.54,272,2.54,277,2.162,278,3.113,279,3.113,280,3.113,281,4.622,282,5.259,283,3.113,284,4.122,285,4.92,286,3.113,287,4.622,288,3.113,289,2.54,290,2.54,291,3.113]],["title/dependencies.html",[3,1.843,292,1.976]],["body/dependencies.html",[3,1.935,7,0.045,17,1.935,19,2.97,21,2.198,45,1.524,46,0.035,47,0.035,53,0.662,84,0.857,86,0.756,215,2.198,273,3.72,293,3.641,294,3.641,295,3.641,296,5.219,297,3.641,298,3.641,299,3.641,300,3.641,301,3.641,302,3.641,303,3.641,304,3.641,305,3.641,306,3.641,307,3.641,308,3.641,309,3.641,310,4.56,311,3.641,312,3.641,313,3.641,314,3.641,315,3.641,316,3.641,317,3.641,318,3.641,319,3.641,320,3.641,321,3.641]],["title/miscellaneous/functions.html",[322,1.463,323,2.829]],["body/miscellaneous/functions.html",[7,0.039,46,0.039,47,0.039,54,0.686,230,0.903,247,1.266,289,3.55,290,4.388,322,2.627,323,3.55,324,3.55,325,4.351]],["title/index.html",[54,0.382,326,2.423,327,2.423]],["body/index.html",[7,0.044,12,0.452,46,0.033,47,0.033,215,2.018,277,2.321,328,3.342,329,3.342,330,4.318,331,3.342,332,3.342,333,3.342,334,3.342,335,3.342,336,3.342,337,2.726,338,4.784,339,3.342,340,3.342,341,3.342,342,5.456,343,3.342,344,3.342,345,3.342,346,5.362,347,3.342,348,3.342,349,4.318,350,3.342,351,3.342,352,3.342,353,3.342,354,4.318,355,4.318,356,3.342,357,3.342,358,3.342,359,4.318,360,4.318,361,3.342,362,3.342,363,3.342,364,3.342,365,3.342,366,2.726,367,3.342,368,3.342,369,3.342,370,3.342,371,3.342,372,3.342,373,3.342,374,3.342,375,3.342,376,3.342,377,2.726,378,3.342,379,3.342,380,3.342,381,3.342,382,3.342,383,3.342,384,2.726]],["title/modules.html",[2,2.083]],["body/modules.html",[1,2.647,2,2.33,6,2.33,7,0.039,46,0.039,47,0.039,366,4.162,385,5.102,386,5.102,387,5.102]],["title/overview.html",[388,3.198]],["body/overview.html",[1,3.259,2,2.133,3,2.573,4,3.274,5,3.274,6,2.936,7,0.041,8,3.362,9,2.787,10,2.787,45,1.342,46,0.037,47,0.037,48,2.423,93,0.592,104,3.274,105,3.274,111,2.423,180,4.241,181,3.274,229,1.065,388,3.274,389,4.014]],["title/properties.html",[114,0.92,292,1.976]],["body/properties.html",[7,0.043,46,0.039,47,0.039,114,1.163,337,3.577,377,3.577,384,3.577,390,4.385,391,4.385,392,4.385]],["title/miscellaneous/variables.html",[322,1.463,393,2.829]],["body/miscellaneous/variables.html",[7,0.044,46,0.037,47,0.037,53,0.882,54,0.635,73,0.946,87,1.007,93,0.459,139,4.248,140,4.248,230,0.836,239,1.142,240,1.225,244,1.142,322,2.432,324,4.248,393,3.286]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":141,"title":{},"body":{"injectables/BinanceService.html":{},"classes/Spread.html":{},"coverage.html":{}}}],["0.0.1",{"_index":391,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":180,"title":{},"body":{"injectables/BinanceService.html":{},"overview.html":{}}}],["1.0.0",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["1.6.9",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":389,"title":{},"body":{"overview.html":{}}}],["100",{"_index":182,"title":{},"body":{"injectables/BinanceService.html":{}}}],["2",{"_index":181,"title":{},"body":{"injectables/BinanceService.html":{},"overview.html":{}}}],["2.0.37",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["6.21.3",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["7.5.6",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["9.0.8",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":219,"title":{},"body":{"injectables/BinanceService.html":{}}}],["amazing",{"_index":367,"title":{},"body":{"index.html":{}}}],["app",{"_index":344,"title":{},"body":{"index.html":{}}}],["applications",{"_index":336,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["ask",{"_index":185,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["askvolume",{"_index":186,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["async",{"_index":57,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["author",{"_index":377,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadmodels",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":161,"title":{},"body":{"injectables/BinanceService.html":{}}}],["backers",{"_index":368,"title":{},"body":{"index.html":{}}}],["base",{"_index":221,"title":{},"body":{"injectables/BinanceService.html":{},"classes/Spread.html":{}}}],["beautify",{"_index":156,"title":{},"body":{"injectables/BinanceService.html":{}}}],["bid",{"_index":179,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["bidvolume",{"_index":183,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["binance",{"_index":53,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["binance.controller",{"_index":108,"title":{},"body":{"modules/BinanceModule.html":{}}}],["binance.pb",{"_index":92,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["binance.service",{"_index":94,"title":{},"body":{"controllers/BinanceController.html":{},"modules/BinanceModule.html":{}}}],["binance/binance.module",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["binance/model/spread.entity",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["binance_package_name",{"_index":244,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["binance_service_name",{"_index":87,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["binanceclient",{"_index":115,"title":{},"body":{"injectables/BinanceService.html":{}}}],["binancecontroller",{"_index":49,"title":{"controllers/BinanceController.html":{}},"body":{"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"coverage.html":{}}}],["binancemodule",{"_index":6,"title":{"modules/BinanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"modules.html":{},"overview.html":{}}}],["binanceservice",{"_index":93,"title":{"injectables/BinanceService.html":{}},"body":{"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["binanceserviceclient",{"_index":228,"title":{"interfaces/BinanceServiceClient.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["binanceservicecontroller",{"_index":245,"title":{"interfaces/BinanceServiceController.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["binanceservicecontrollermethods",{"_index":247,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolean",{"_index":243,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["bootstrap",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":387,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":385,"title":{},"body":{"modules.html":{}}}],["building",{"_index":331,"title":{},"body":{"index.html":{}}}],["catch",{"_index":206,"title":{},"body":{"injectables/BinanceService.html":{}}}],["class",{"_index":45,"title":{"classes/Spread.html":{}},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"classes/Spread.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/Spread.html":{}}}],["clientid",{"_index":242,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_binancemodule",{"_index":104,"title":{},"body":{"modules/BinanceModule.html":{},"overview.html":{}}}],["cluster_binancemodule_providers",{"_index":105,"title":{},"body":{"modules/BinanceModule.html":{},"overview.html":{}}}],["column",{"_index":270,"title":{},"body":{"classes/Spread.html":{}}}],["column({type",{"_index":264,"title":{},"body":{"classes/Spread.html":{}}}],["configmodule",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["connected",{"_index":169,"title":{},"body":{"injectables/BinanceService.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["constructor(private",{"_index":96,"title":{},"body":{"controllers/BinanceController.html":{}}}],["constructor(spreadrepo",{"_index":125,"title":{},"body":{"injectables/BinanceService.html":{}}}],["controller",{"_index":48,"title":{"controllers/BinanceController.html":{}},"body":{"controllers/BinanceController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('binance",{"_index":95,"title":{},"body":{"controllers/BinanceController.html":{}}}],["controllers",{"_index":50,"title":{},"body":{"controllers/BinanceController.html":{},"modules/BinanceModule.html":{}}}],["coverage",{"_index":277,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["currspread",{"_index":116,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data",{"_index":75,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["data.bestaskprice",{"_index":178,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data.bestaskquantity",{"_index":187,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data.bestbid",{"_index":176,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data.bestbidquantity",{"_index":184,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data.spread",{"_index":210,"title":{},"body":{"injectables/BinanceService.html":{}}}],["data.symbol",{"_index":174,"title":{},"body":{"injectables/BinanceService.html":{}}}],["database",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["datatype",{"_index":271,"title":{},"body":{"classes/Spread.html":{}}}],["datatype.decimal",{"_index":276,"title":{},"body":{"classes/Spread.html":{}}}],["datatype.string",{"_index":275,"title":{},"body":{"classes/Spread.html":{}}}],["date.now",{"_index":189,"title":{},"body":{"injectables/BinanceService.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"controllers/BinanceController.html":{},"classes/Spread.html":{}}}],["default",{"_index":139,"title":{},"body":{"injectables/BinanceService.html":{},"miscellaneous/variables.html":{}}}],["defaultlogger",{"_index":147,"title":{},"body":{"injectables/BinanceService.html":{}}}],["defaultvalue",{"_index":266,"title":{},"body":{"classes/Spread.html":{}}}],["defined",{"_index":64,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/Spread.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":337,"title":{},"body":{"index.html":{},"properties.html":{}}}],["descriptor",{"_index":250,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["development",{"_index":345,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["disable",{"_index":212,"title":{},"body":{"injectables/BinanceService.html":{}}}],["disconnected",{"_index":202,"title":{},"body":{"injectables/BinanceService.html":{}}}],["documentation",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":356,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":332,"title":{},"body":{"index.html":{}}}],["empty",{"_index":232,"title":{"interfaces/Empty.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["endregion",{"_index":209,"title":{},"body":{"injectables/BinanceService.html":{}}}],["error",{"_index":204,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["error.internal_server_error",{"_index":226,"title":{},"body":{"injectables/BinanceService.html":{}}}],["error.message",{"_index":208,"title":{},"body":{"injectables/BinanceService.html":{}}}],["eslint",{"_index":211,"title":{},"body":{"injectables/BinanceService.html":{}}}],["eslint/no",{"_index":216,"title":{},"body":{"injectables/BinanceService.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["express",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":262,"title":{},"body":{"classes/Spread.html":{}}}],["false",{"_index":207,"title":{},"body":{"injectables/BinanceService.html":{}}}],["feed",{"_index":166,"title":{},"body":{"injectables/BinanceService.html":{}}}],["feed$.asobservable",{"_index":194,"title":{},"body":{"injectables/BinanceService.html":{}}}],["feed$.next(formateddata",{"_index":191,"title":{},"body":{"injectables/BinanceService.html":{}}}],["feed.complete",{"_index":198,"title":{},"body":{"injectables/BinanceService.html":{}}}],["feeds",{"_index":117,"title":{},"body":{"injectables/BinanceService.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["formateddata",{"_index":172,"title":{},"body":{"injectables/BinanceService.html":{}}}],["framework",{"_index":330,"title":{},"body":{"index.html":{}}}],["function",{"_index":246,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["functions",{"_index":323,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getspread",{"_index":58,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["getspread(request",{"_index":231,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["getspreadresponse",{"_index":88,"title":{"interfaces/GetSpreadResponse.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["getting",{"_index":326,"title":{"index.html":{}},"body":{}}],["grow",{"_index":363,"title":{},"body":{"index.html":{}}}],["grpc/grpc",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["grpcmethod",{"_index":83,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcmethod('binanceservice",{"_index":252,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcmethod(binance_service_name",{"_index":63,"title":{},"body":{"controllers/BinanceController.html":{}}}],["grpcmethods",{"_index":248,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcstreammethod",{"_index":238,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcstreammethod('binanceservice",{"_index":255,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["grpcstreammethods",{"_index":254,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["here",{"_index":374,"title":{},"body":{"index.html":{}}}],["host",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":381,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":149,"title":{},"body":{"injectables/BinanceService.html":{}}}],["httpstatus.internal_server_error",{"_index":225,"title":{},"body":{"injectables/BinanceService.html":{}}}],["httpstatus.ok",{"_index":224,"title":{},"body":{"injectables/BinanceService.html":{}}}],["identifier",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":152,"title":{},"body":{"injectables/BinanceService.html":{}}}],["import",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["imports",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["injectable",{"_index":111,"title":{"injectables/BinanceService.html":{}},"body":{"injectables/BinanceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/BinanceService.html":{}}}],["injectmodel",{"_index":150,"title":{},"body":{"injectables/BinanceService.html":{}}}],["injectmodel(spread",{"_index":153,"title":{},"body":{"injectables/BinanceService.html":{}}}],["installation",{"_index":341,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":343,"title":{},"body":{"index.html":{}}}],["interface",{"_index":227,"title":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":229,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"overview.html":{}}}],["join",{"_index":370,"title":{},"body":{"index.html":{}}}],["js",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":378,"title":{},"body":{"index.html":{}}}],["license",{"_index":384,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":360,"title":{},"body":{"index.html":{}}}],["line",{"_index":214,"title":{},"body":{"injectables/BinanceService.html":{}}}],["listener",{"_index":171,"title":{},"body":{"injectables/BinanceService.html":{}}}],["listeners",{"_index":118,"title":{},"body":{"injectables/BinanceService.html":{}}}],["logger",{"_index":119,"title":{},"body":{"injectables/BinanceService.html":{}}}],["logging",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":143,"title":{},"body":{"injectables/BinanceService.html":{}}}],["market",{"_index":241,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":249,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["method)(constructor.prototype[method",{"_index":253,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["methods",{"_index":55,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{}}}],["miscellaneous",{"_index":322,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":359,"title":{},"body":{"index.html":{}}}],["mode",{"_index":349,"title":{},"body":{"index.html":{}}}],["model",{"_index":263,"title":{},"body":{"classes/Spread.html":{}}}],["model/spread.entity",{"_index":109,"title":{},"body":{"modules/BinanceModule.html":{},"injectables/BinanceService.html":{}}}],["models",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/BinanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":373,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":379,"title":{},"body":{"index.html":{}}}],["name",{"_index":72,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"classes/Spread.html":{}}}],["nest",{"_index":338,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":383,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":84,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"dependencies.html":{}}}],["new",{"_index":142,"title":{},"body":{"injectables/BinanceService.html":{},"coverage.html":{}}}],["next",{"_index":213,"title":{},"body":{"injectables/BinanceService.html":{}}}],["node.js",{"_index":329,"title":{},"body":{"index.html":{}}}],["npm",{"_index":342,"title":{},"body":{"index.html":{}}}],["null",{"_index":205,"title":{},"body":{"injectables/BinanceService.html":{}}}],["number",{"_index":138,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["object",{"_index":146,"title":{},"body":{"injectables/BinanceService.html":{}}}],["observable",{"_index":85,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["onmoduleinit",{"_index":121,"title":{},"body":{"injectables/BinanceService.html":{}}}],["open",{"_index":361,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"overview.html":{}}}],["overview",{"_index":388,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":292,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":71,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{}}}],["password",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["pg",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":371,"title":{},"body":{"index.html":{}}}],["port",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":52,"title":{},"body":{"controllers/BinanceController.html":{}}}],["primarykey",{"_index":267,"title":{},"body":{"classes/Spread.html":{}}}],["private",{"_index":56,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["process.env.postgres_db",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_port",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":351,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":328,"title":{},"body":{"index.html":{}}}],["project",{"_index":362,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["properties",{"_index":114,"title":{"properties.html":{}},"body":{"injectables/BinanceService.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"properties.html":{}}}],["protobufpackage",{"_index":239,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":107,"title":{},"body":{"modules/BinanceModule.html":{}}}],["public",{"_index":120,"title":{},"body":{"injectables/BinanceService.html":{}}}],["pubsub",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":372,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":97,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["realask",{"_index":177,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["realbid",{"_index":175,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["reflect",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["reflect.getownpropertydescriptor(constructor.prototype",{"_index":251,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["region",{"_index":165,"title":{},"body":{"injectables/BinanceService.html":{}}}],["repository",{"_index":340,"title":{},"body":{"index.html":{}}}],["request",{"_index":79,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["request.clientid",{"_index":170,"title":{},"body":{"injectables/BinanceService.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"overview.html":{}}}],["result",{"_index":203,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":99,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["returns",{"_index":66,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{}}}],["rimraf",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":346,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":86,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"dependencies.html":{}}}],["s",{"_index":160,"title":{},"body":{"injectables/BinanceService.html":{}}}],["s.save",{"_index":222,"title":{},"body":{"injectables/BinanceService.html":{}}}],["s.spread",{"_index":164,"title":{},"body":{"injectables/BinanceService.html":{}}}],["scalable",{"_index":333,"title":{},"body":{"index.html":{}}}],["sequelize",{"_index":273,"title":{},"body":{"classes/Spread.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{}}}],["sequelizemodule.forfeature([spread",{"_index":110,"title":{},"body":{"modules/BinanceModule.html":{}}}],["sequelizemodule.forroot",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":334,"title":{},"body":{"index.html":{}}}],["service",{"_index":98,"title":{},"body":{"controllers/BinanceController.html":{}}}],["setspread",{"_index":59,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["setspread(data",{"_index":68,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{}}}],["setspread(request",{"_index":234,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["setspreadrequest",{"_index":69,"title":{"interfaces/SetSpreadRequest.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["setspreadresponse",{"_index":89,"title":{"interfaces/SetSpreadResponse.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["side",{"_index":335,"title":{},"body":{"index.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/BinanceController.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"index.html":{}}}],["sponsors",{"_index":365,"title":{},"body":{"index.html":{}}}],["spread",{"_index":23,"title":{"classes/Spread.html":{}},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["spreadrepo",{"_index":127,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/.../binance.pb.ts",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":14,"title":{},"body":{"modules/AppModule.html":{}}}],["src/binance/binance.controller.ts",{"_index":51,"title":{},"body":{"controllers/BinanceController.html":{},"coverage.html":{}}}],["src/binance/binance.controller.ts:21",{"_index":70,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.controller.ts:26",{"_index":65,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.controller.ts:31",{"_index":82,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.controller.ts:36",{"_index":78,"title":{},"body":{"controllers/BinanceController.html":{}}}],["src/binance/binance.module.ts",{"_index":106,"title":{},"body":{"modules/BinanceModule.html":{}}}],["src/binance/binance.pb.ts",{"_index":230,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/binance/binance.pb.ts:53",{"_index":233,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:55",{"_index":235,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:57",{"_index":236,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:59",{"_index":237,"title":{},"body":{"interfaces/BinanceServiceClient.html":{}}}],["src/binance/binance.pb.ts:63",{"_index":256,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:65",{"_index":257,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:69",{"_index":258,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.pb.ts:71",{"_index":259,"title":{},"body":{"interfaces/BinanceServiceController.html":{}}}],["src/binance/binance.service.ts",{"_index":113,"title":{},"body":{"injectables/BinanceService.html":{},"coverage.html":{}}}],["src/binance/binance.service.ts:103",{"_index":128,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:17",{"_index":137,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:18",{"_index":148,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:19",{"_index":144,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:20",{"_index":145,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:21",{"_index":126,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:31",{"_index":129,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:38",{"_index":132,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:67",{"_index":135,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/binance.service.ts:89",{"_index":130,"title":{},"body":{"injectables/BinanceService.html":{}}}],["src/binance/model/spread.entity.ts",{"_index":261,"title":{},"body":{"classes/Spread.html":{},"coverage.html":{}}}],["src/binance/model/spread.entity.ts:6",{"_index":268,"title":{},"body":{"classes/Spread.html":{}}}],["src/binance/model/spread.entity.ts:9",{"_index":269,"title":{},"body":{"classes/Spread.html":{}}}],["src/main.ts",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":347,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":350,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":352,"title":{},"body":{"index.html":{}}}],["started",{"_index":327,"title":{"index.html":{}},"body":{}}],["starter",{"_index":339,"title":{},"body":{"index.html":{}}}],["statements",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":223,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["stay",{"_index":375,"title":{},"body":{"index.html":{}}}],["string",{"_index":240,"title":{},"body":{"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":151,"title":{},"body":{"injectables/BinanceService.html":{}}}],["subscribe",{"_index":122,"title":{},"body":{"injectables/BinanceService.html":{}}}],["subscribe(request",{"_index":131,"title":{},"body":{"injectables/BinanceService.html":{}}}],["subscribefeed",{"_index":60,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["subscribefeed(request",{"_index":76,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["subscribefeedrequest",{"_index":77,"title":{"interfaces/SubscribeFeedRequest.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["subscribefeedresponse",{"_index":90,"title":{"interfaces/SubscribeFeedResponse.html":{}},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["support",{"_index":366,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":386,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":173,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["synchronize",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":272,"title":{},"body":{"classes/Spread.html":{},"coverage.html":{}}}],["tablename",{"_index":274,"title":{},"body":{"classes/Spread.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":355,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":358,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":357,"title":{},"body":{"index.html":{}}}],["tests",{"_index":354,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":364,"title":{},"body":{"index.html":{}}}],["this.binanceclient",{"_index":155,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.binanceclient.on('formattedmessage",{"_index":192,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.binanceclient.removelistener('formattedmessage",{"_index":200,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.binanceclient.subscribespotsymbol24hrticker('btcusdt",{"_index":158,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.currspread",{"_index":163,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.feeds.delete(request.clientid",{"_index":197,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.feeds.get(request.clientid",{"_index":196,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.feeds.set(request.clientid",{"_index":167,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.listeners.delete(request.clientid",{"_index":201,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.listeners.get(request.clientid",{"_index":199,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.listeners.set(request.clientid",{"_index":193,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.logger",{"_index":157,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.logger.info('client",{"_index":168,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.logger.info('feed",{"_index":190,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.service.getspread",{"_index":101,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.service.setspread(data",{"_index":100,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.service.subscribe(request",{"_index":103,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.service.unsubscribe(request",{"_index":102,"title":{},"body":{"controllers/BinanceController.html":{}}}],["this.spreadrepo.findbypk('base",{"_index":162,"title":{},"body":{"injectables/BinanceService.html":{}}}],["this.spreadrepo.findorcreate",{"_index":220,"title":{},"body":{"injectables/BinanceService.html":{}}}],["timestamp",{"_index":188,"title":{},"body":{"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["touch",{"_index":376,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/BinanceService.html":{},"classes/Spread.html":{}}}],["try",{"_index":195,"title":{},"body":{"injectables/BinanceService.html":{}}}],["twitter",{"_index":382,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"classes/Spread.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":154,"title":{},"body":{"injectables/BinanceService.html":{}}}],["types",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":215,"title":{},"body":{"injectables/BinanceService.html":{},"classes/Spread.html":{},"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":265,"title":{},"body":{"classes/Spread.html":{}}}],["unit",{"_index":353,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":133,"title":{},"body":{"injectables/BinanceService.html":{}}}],["unlicensed",{"_index":392,"title":{},"body":{"properties.html":{}}}],["unsubscribe",{"_index":123,"title":{},"body":{"injectables/BinanceService.html":{}}}],["unsubscribe(request",{"_index":134,"title":{},"body":{"injectables/BinanceService.html":{}}}],["unsubscribefeed",{"_index":61,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["unsubscribefeed(request",{"_index":80,"title":{},"body":{"controllers/BinanceController.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{}}}],["unsubscribefeedrequest",{"_index":81,"title":{"interfaces/UnsubscribeFeedRequest.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["unsubscribefeedresponse",{"_index":91,"title":{"interfaces/UnsubscribeFeedResponse.html":{}},"body":{"controllers/BinanceController.html":{},"injectables/BinanceService.html":{},"interfaces/BinanceServiceClient.html":{},"interfaces/BinanceServiceController.html":{},"interfaces/Empty.html":{},"interfaces/GetSpreadResponse.html":{},"interfaces/SetSpreadRequest.html":{},"interfaces/SetSpreadResponse.html":{},"interfaces/SubscribeFeedRequest.html":{},"interfaces/SubscribeFeedResponse.html":{},"interfaces/UnsubscribeFeedRequest.html":{},"interfaces/UnsubscribeFeedResponse.html":{},"coverage.html":{}}}],["unused",{"_index":217,"title":{},"body":{"injectables/BinanceService.html":{}}}],["username",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":140,"title":{},"body":{"injectables/BinanceService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":393,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":218,"title":{},"body":{"injectables/BinanceService.html":{}}}],["version",{"_index":390,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":348,"title":{},"body":{"index.html":{}}}],["website",{"_index":380,"title":{},"body":{"index.html":{}}}],["websocketclient",{"_index":136,"title":{},"body":{"injectables/BinanceService.html":{}}}],["you'd",{"_index":369,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/BinanceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBinanceModule\n\nBinanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBinanceModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BinanceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { BinanceModule } from './binance/binance.module';\nimport { Spread } from './binance/model/spread.entity';\n\n@Module({\n    imports: [\n        ConfigModule.forRoot(),\n        SequelizeModule.forRoot({\n            dialect: 'postgres',\n            host: process.env.POSTGRES_HOST,\n            port: +process.env.POSTGRES_PORT,\n            username: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n            database: process.env.POSTGRES_DB,\n            models: [Spread],\n            autoLoadModels: true,\n            synchronize: true,\n            logging: true,\n        }),\n        BinanceModule,\n    ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BinanceController.html":{"url":"controllers/BinanceController.html","title":"controller - BinanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BinanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                binance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getSpread\n                            \n                            \n                                    Private\n                                    Async\n                                setSpread\n                            \n                            \n                                    Private\n                                    Async\n                                subscribeFeed\n                            \n                            \n                                    Private\n                                    Async\n                                unsubscribeFeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpread()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod(BINANCE_SERVICE_NAME, 'GetSpread')\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        setSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSpread(data: SetSpreadRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod(BINANCE_SERVICE_NAME, 'SetSpread')\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        subscribeFeed\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeFeed(request: SubscribeFeedRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod(BINANCE_SERVICE_NAME, 'SubscribeFeed')\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        unsubscribeFeed\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFeed(request: UnsubscribeFeedRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod(BINANCE_SERVICE_NAME, 'UnsubscribeFeed')\n                \n            \n\n            \n                \n                    Defined in src/binance/binance.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { GrpcMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport {\n    BINANCE_SERVICE_NAME,\n    GetSpreadResponse,\n    SetSpreadRequest,\n    SetSpreadResponse,\n    SubscribeFeedRequest,\n    SubscribeFeedResponse,\n    UnsubscribeFeedRequest,\n    UnsubscribeFeedResponse,\n} from './binance.pb';\nimport { BinanceService } from './binance.service';\n\n@Controller('binance')\nexport class BinanceController {\n    constructor(private readonly service: BinanceService) {}\n\n    @GrpcMethod(BINANCE_SERVICE_NAME, 'SetSpread')\n    private async setSpread(data: SetSpreadRequest): Promise {\n        return this.service.setSpread(data);\n    }\n\n    @GrpcMethod(BINANCE_SERVICE_NAME, 'GetSpread')\n    private async getSpread(): Promise {\n        return this.service.getSpread();\n    }\n\n    @GrpcMethod(BINANCE_SERVICE_NAME, 'UnsubscribeFeed')\n    private async unsubscribeFeed(request: UnsubscribeFeedRequest): Promise {\n        return this.service.unsubscribe(request);\n    }\n\n    @GrpcMethod(BINANCE_SERVICE_NAME, 'SubscribeFeed')\n    private async subscribeFeed(request: SubscribeFeedRequest): Promise> {\n        return this.service.subscribe(request);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BinanceModule.html":{"url":"modules/BinanceModule.html","title":"module - BinanceModule","body":"\n                   \n\n\n\n\n    Modules\n    BinanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BinanceModule\n\n\n\ncluster_BinanceModule_providers\n\n\n\n\nBinanceService\n\nBinanceService\n\n\n\nBinanceModule\n\nBinanceModule\n\nBinanceModule -->\n\nBinanceService->BinanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/binance/binance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BinanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BinanceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { BinanceService } from './binance.service';\nimport { BinanceController } from './binance.controller';\nimport { Spread } from './model/spread.entity';\n\n@Module({\n    imports: [SequelizeModule.forFeature([Spread])],\n    controllers: [BinanceController],\n    providers: [BinanceService],\n})\nexport class BinanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BinanceService.html":{"url":"injectables/BinanceService.html","title":"injectable - BinanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BinanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                binanceClient\n                            \n                            \n                                    Private\n                                currSpread\n                            \n                            \n                                    Private\n                                feeds\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getSpread\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                setSpread\n                            \n                            \n                                    Public\n                                    Async\n                                subscribe\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spreadRepo)\n                    \n                \n                        \n                            \n                                Defined in src/binance/binance.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spreadRepo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpread()\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setSpread\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSpread(data: SetSpreadRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(request: SubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe(request: UnsubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        binanceClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebsocketClient\n\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currSpread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        feeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { ...DefaultLogger }\n                    \n                \n                    \n                        \n                                Defined in src/binance/binance.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { WebsocketClient, DefaultLogger } from 'binance';\nimport { HttpStatus, Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Spread } from './model/spread.entity';\nimport {\n    GetSpreadResponse,\n    SetSpreadRequest,\n    SetSpreadResponse,\n    SubscribeFeedRequest,\n    UnsubscribeFeedRequest,\n    UnsubscribeFeedResponse,\n} from './binance.pb';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class BinanceService implements OnModuleInit {\n    private readonly binanceClient: WebsocketClient;\n    private readonly logger = { ...DefaultLogger };\n    private feeds = new Map();\n    private listeners = new Map();\n    private currSpread = 0;\n\n    constructor(\n        @InjectModel(Spread)\n        private readonly spreadRepo: typeof Spread,\n    ) {\n        this.binanceClient = new WebsocketClient({ beautify: true }, this.logger);\n        this.binanceClient.subscribeSpotSymbol24hrTicker('BTCUSDT');\n    }\n\n    async onModuleInit() {\n        const s = await this.spreadRepo.findByPk('base');\n        this.currSpread = +s.spread;\n    }\n\n    //#region BINANCE\n\n    public async subscribe(request: SubscribeFeedRequest) {\n        const feed$ = new Subject();\n        this.feeds.set(request.clientId, feed$);\n\n        this.logger.info('Client connected ' + request.clientId);\n\n        const listener = (data: any) => {\n            const formatedData = {\n                symbol: data.symbol,\n                realBid: data.bestBid,\n                realAsk: data.bestAskPrice,\n                spread: this.currSpread,\n                bid: data.bestBid * (1 - this.currSpread / 2 / 100),\n                bidVolume: data.bestBidQuantity,\n                ask: data.bestAskPrice * (1 + this.currSpread / 2 / 100),\n                askVolume: data.bestAskQuantity,\n                timestamp: Date.now(),\n            };\n            //this.logger.info('feed for ' + request.clientId);\n            feed$.next(formatedData);\n        };\n\n        this.binanceClient.on('formattedMessage', listener);\n\n        this.listeners.set(request.clientId, listener);\n\n        return feed$.asObservable();\n    }\n\n    public async unsubscribe(request: UnsubscribeFeedRequest): Promise {\n        try {\n            const feed: Subject = this.feeds.get(request.clientId);\n            this.feeds.delete(request.clientId);\n            feed.complete();\n\n            const listener = this.listeners.get(request.clientId);\n            this.binanceClient.removeListener('formattedMessage', listener);\n            this.listeners.delete(request.clientId);\n\n            this.logger.info('Client disconnected ' + request.clientId);\n\n            return { result: true, error: null };\n        } catch (error) {\n            return { result: false, error: [error.message] };\n        }\n    }\n\n    //#endregion\n\n    //#region SPREAD\n\n    public async setSpread(data: SetSpreadRequest): Promise {\n        try {\n            this.currSpread = data.spread;\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [s, _] = await this.spreadRepo.findOrCreate({ where: { name: 'base' } });\n            s.spread = data.spread;\n            await s.save();\n\n            return { status: HttpStatus.OK, error: null };\n        } catch (error) {\n            return { status: HttpStatus.INTERNAL_SERVER_ERROR, error: [error.message] };\n        }\n    }\n\n    public async getSpread(): Promise {\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [s, _] = await this.spreadRepo.findOrCreate({ where: { name: 'base' } });\n            this.currSpread = s.spread;\n\n            return { status: HttpStatus.OK, error: null, spread: s.spread };\n        } catch (error) {\n            return { status: error.INTERNAL_SERVER_ERROR, error: error.message, spread: null };\n        }\n    }\n\n    //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BinanceServiceClient.html":{"url":"interfaces/BinanceServiceClient.html","title":"interface - BinanceServiceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BinanceServiceClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getSpread\n                                    \n                                \n                                \n                                    \n                                        setSpread\n                                    \n                                \n                                \n                                    \n                                        subscribeFeed\n                                    \n                                \n                                \n                                    \n                                        unsubscribeFeed\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpread\n                        \n                    \n                \n            \n            \n                \ngetSpread(request: Empty)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Empty\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpread\n                        \n                    \n                \n            \n            \n                \nsetSpread(request: SetSpreadRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeFeed\n                        \n                    \n                \n            \n            \n                \nsubscribeFeed(request: SubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeFeed\n                        \n                    \n                \n            \n            \n                \nunsubscribeFeed(request: UnsubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BinanceServiceController.html":{"url":"interfaces/BinanceServiceController.html","title":"interface - BinanceServiceController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BinanceServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getSpread\n                                    \n                                \n                                \n                                    \n                                        setSpread\n                                    \n                                \n                                \n                                    \n                                        subscribeFeed\n                                    \n                                \n                                \n                                    \n                                        unsubscribeFeed\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpread\n                        \n                    \n                \n            \n            \n                \ngetSpread(request: Empty)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Empty\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | GetSpreadResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpread\n                        \n                    \n                \n            \n            \n                \nsetSpread(request: SetSpreadRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SetSpreadRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | SetSpreadResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeFeed\n                        \n                    \n                \n            \n            \n                \nsubscribeFeed(request: SubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                SubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeFeed\n                        \n                    \n                \n            \n            \n                \nunsubscribeFeed(request: UnsubscribeFeedRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/binance/binance.pb.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                UnsubscribeFeedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise | Observable | UnsubscribeFeedResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Empty.html":{"url":"interfaces/Empty.html","title":"interface - Empty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Empty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetSpreadResponse.html":{"url":"interfaces/GetSpreadResponse.html","title":"interface - GetSpreadResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetSpreadResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetSpreadRequest.html":{"url":"interfaces/SetSpreadRequest.html","title":"interface - SetSpreadRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetSpreadRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            spread\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetSpreadResponse.html":{"url":"interfaces/SetSpreadResponse.html","title":"interface - SetSpreadResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetSpreadResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Spread.html":{"url":"classes/Spread.html","title":"class - Spread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Spread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/model/spread.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                spread\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, defaultValue: 'base', primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/model/spread.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, defaultValue: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/binance/model/spread.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Model, Table } from 'sequelize-typescript';\n\n@Table({ tableName: 'spread' })\nexport class Spread extends Model {\n    @Column({ type: DataType.STRING, defaultValue: 'base', primaryKey: true })\n    name: string;\n\n    @Column({ type: DataType.DECIMAL, defaultValue: 0 })\n    spread: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscribeFeedRequest.html":{"url":"interfaces/SubscribeFeedRequest.html","title":"interface - SubscribeFeedRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscribeFeedRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientId\n                                        \n                                \n                                \n                                        \n                                            market\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        market\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        market:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscribeFeedResponse.html":{"url":"interfaces/SubscribeFeedResponse.html","title":"interface - SubscribeFeedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubscribeFeedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ask\n                                        \n                                \n                                \n                                        \n                                            askVolume\n                                        \n                                \n                                \n                                        \n                                            bid\n                                        \n                                \n                                \n                                        \n                                            bidVolume\n                                        \n                                \n                                \n                                        \n                                            realAsk\n                                        \n                                \n                                \n                                        \n                                            realBid\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ask:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        askVolume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        askVolume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bidVolume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bidVolume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        realAsk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        realAsk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        realBid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        realBid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnsubscribeFeedRequest.html":{"url":"interfaces/UnsubscribeFeedRequest.html","title":"interface - UnsubscribeFeedRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnsubscribeFeedRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnsubscribeFeedResponse.html":{"url":"interfaces/UnsubscribeFeedResponse.html","title":"interface - UnsubscribeFeedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnsubscribeFeedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/binance/binance.pb.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport const protobufPackage = 'binance';\n\nexport interface Empty {}\n\nexport interface GetSpreadResponse {\n    status: number;\n    error: string[];\n    spread: number;\n}\n\nexport interface SetSpreadRequest {\n    spread: number;\n}\n\nexport interface SetSpreadResponse {\n    status: number;\n    error: string[];\n}\n\nexport interface SubscribeFeedRequest {\n    market: string;\n    clientId: string;\n}\n\nexport interface SubscribeFeedResponse {\n    symbol: string;\n    realBid: number;\n    realAsk: number;\n    spread: number;\n    bid: number;\n    bidVolume: number;\n    ask: number;\n    askVolume: number;\n    timestamp: number;\n}\n\nexport interface UnsubscribeFeedRequest {\n    clientId: string;\n}\n\nexport interface UnsubscribeFeedResponse {\n    result: boolean;\n    error: string[];\n}\n\nexport const BINANCE_PACKAGE_NAME = 'binance';\n\nexport interface BinanceServiceClient {\n    getSpread(request: Empty): Observable;\n\n    setSpread(request: SetSpreadRequest): Observable;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(request: UnsubscribeFeedRequest): Observable;\n}\n\nexport interface BinanceServiceController {\n    getSpread(request: Empty): Promise | Observable | GetSpreadResponse;\n\n    setSpread(\n        request: SetSpreadRequest,\n    ): Promise | Observable | SetSpreadResponse;\n\n    subscribeFeed(request: SubscribeFeedRequest): Observable;\n\n    unsubscribeFeed(\n        request: UnsubscribeFeedRequest,\n    ): Promise | Observable | UnsubscribeFeedResponse;\n}\n\nexport function BinanceServiceControllerMethods() {\n    return function (constructor: Function) {\n        const grpcMethods: string[] = ['getSpread', 'setSpread', 'subscribeFeed', 'unsubscribeFeed'];\n        for (const method of grpcMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n        const grpcStreamMethods: string[] = [];\n        for (const method of grpcStreamMethods) {\n            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n            GrpcStreamMethod('BinanceService', method)(constructor.prototype[method], method, descriptor);\n        }\n    };\n}\n\nexport const BINANCE_SERVICE_NAME = 'BinanceService';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/binance/binance.controller.ts\n            \n            controller\n            BinanceController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            BinanceServiceClient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            BinanceServiceController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            GetSpreadResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SetSpreadRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SetSpreadResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SubscribeFeedRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            SubscribeFeedResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            UnsubscribeFeedRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            interface\n            UnsubscribeFeedResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            function\n            BinanceServiceControllerMethods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            BINANCE_PACKAGE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            BINANCE_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.pb.ts\n            \n            variable\n            protobufPackage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/binance/binance.service.ts\n            \n            injectable\n            BinanceService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/binance/model/spread.entity.ts\n            \n            class\n            Spread\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @grpc/grpc-js : ^1.6.9\n        \n            @nestjs/common : ^9.0.8\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.8\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^9.0.8\n        \n            @nestjs/platform-express : ^9.0.8\n        \n            @nestjs/sequelize : ^9.0.0\n        \n            binance : ^2.0.37\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            nestjs-pg-pubsub : ^1.0.0\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.6\n        \n            sequelize : ^6.21.3\n        \n            sequelize-typescript : ^2.1.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BinanceServiceControllerMethods   (src/.../binance.pb.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/binance/binance.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BinanceServiceControllerMethods\n                        \n                    \n                \n            \n            \n                \nBinanceServiceControllerMethods()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BinanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BinanceModule\n\n\n\ncluster_BinanceModule_providers\n\n\n\n\nBinanceModule\n\nBinanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBinanceModule->AppModule\n\n\n\n\n\nBinanceService\n\nBinanceService\n\nBinanceModule -->\n\nBinanceService->BinanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BINANCE_PACKAGE_NAME   (src/.../binance.pb.ts)\n                        \n                        \n                            BINANCE_SERVICE_NAME   (src/.../binance.pb.ts)\n                        \n                        \n                            protobufPackage   (src/.../binance.pb.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/binance/binance.pb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BINANCE_PACKAGE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'binance'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BINANCE_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BinanceService'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        protobufPackage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'binance'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
